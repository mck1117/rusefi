; this is TunerStudio project for www.rusefi.com DIY engine management system
;
; rusefi.ini is generated by invoking gen_config.bat (look inside for the exact command to run it outside of Windows)
; inputs are rusefi.input template and rusefi_config.txt file
;

; this should stop TS from looking for the CAN ID in the 2nd byte location and allow the page reads to work correctly.
enable2ndByteCanID = false

#unset tuneByMAF

;[SettingGroups]
   ; the referenceName will over-ride previous, so if you are creating a 
   ; settingGroup with a reference name of lambdaSensor, it will replace the 
   ; setting group defined in the settingGroups.xml of the TunerStudio config
   ; folder. If is is an undefined referenceName, it will be added.
   ; keyword    =  referenceName,  DisplayName

;    settingGroup = fAlgorithmSetting, "Fuel Logic / Tables"  
;    settingOption = FA_PLAIN_MAF, "Plain MAF"
;    settingOption = FA_TPS, "AlphaN/TPS"
;    settingOption = DEFAULT, "Speed Density" ; DEFAULT will be over looked and this will fall into the #else block of the statement.



[TunerStudio]
   queryCommand   = "S"
   versionInfo    = "V"  ; firmwave version for title bar.
   signature    = "rusEFI v1.04" ; signature is expected to be 7 or more characters.

[Constants]
; new packet serial format with CRC
   messageEnvelopeFormat = msEnvelope_1.0

   endianness          = little
   nPages              = 1
  

   pageIdentifier      = "\x00\x00"
   pageReadCommand     = "R\x00\x00%2o%2c"
   burnCommand         = "B\x00\x00"
   pageActivate        = "P\x00\x00"
   pageValueWrite      = "W\x00\x00%2o%v"
   pageChunkWrite      = "C\x00\x00%2o%2c%v"
;   crc32CheckCommand   = "k%2i%2o\xB8\x36"
   crc32CheckCommand   = "k\x00\x00\x00\x00\x36\xB8"

;communication settings
   pageActivationDelay = 500 ; Milliseconds delay after burn command. See https://sourceforge.net/p/rusefi/tickets/77/
;e.g. put writeblocks off and add an interwrite delay
   writeBlocks = on
   interWriteDelay = 10
   blockReadTimeout    = 3000; Milliseconds general timeout
   
 ; delayAfterPortOpen = 500  
   
   blockingFactor = 400 ; max chunk size
;end communication settings

   ;  name      			= bits,   type, offset,  bits
   ;  name           		= array,  type, offset,  shape, units,     scale, translate,    lo,      hi, digits
   ;  name       			= scalar, type, offset,         units,     scale, translate,    lo,      hi, digits

; see PAGE_0_SIZE in C source code    
; CONFIG_DEFINITION_START
; this section was generated automatically by ConfigDefinition.jar based on rusefi_config.txt Fri May 04 16:42:30 EDT 2018

pageSize            = 20000
page = 1
	engineType					 = bits, S32, 0, [0:2], "AUDI_AAN", "DODGE_NEON_1995", "FORD_ASPIRE_1996", "FORD_FIESTA", "NISSAN_PRIMERA", "HONDA_ACCORD", "FORD_INLINE_6_1995", "GY6_139QMB"
	engineSnifferRpmThreshold		= scalar, S32,	4,	"RPM", 1, 0, 0,30000, 0
	injector_flow					= scalar, F32,	8,	"cm3/min", 1, 0, 0, 1000, 2
	injector_battLagCorrBins		= array, F32,	12,	[8],	"volts", 1, 0, 0.0, 20.0, 2
	injector_battLagCorr			= array, F32,	44,	[8],	"ms", 1, 0, 0.0, 50.0, 2
	directSelfStimulation	= bits,    U32,   	76, [0:0], "false", "true"
	activateAuxPid1			= bits,    U32,   	76, [1:1], "false", "true"
	isVerboseAuxPid1		= bits,    U32,   	76, [2:2], "false", "true"
	activateAuxPid2			= bits,    U32,   	76, [3:3], "false", "true"
	isVerboseAuxPid2		= bits,    U32,   	76, [4:4], "false", "true"
	activateAuxPid3			= bits,    U32,   	76, [5:5], "false", "true"
	isVerboseAuxPid3		= bits,    U32,   	76, [6:6], "false", "true"
	activateAuxPid4			= bits,    U32,   	76, [7:7], "false", "true"
	isVerboseAuxPid4		= bits,    U32,   	76, [8:8], "false", "true"
	useBiQuadAnalogFiltering= bits,    U32,   	76, [9:9], "false", "true"
	issue_294_10			= bits,    U32,   	76, [10:10], "false", "true"
	issue_294_11			= bits,    U32,   	76, [11:11], "false", "true"
	issue_294_12			= bits,    U32,   	76, [12:12], "false", "true"
	issue_294_13			= bits,    U32,   	76, [13:13], "false", "true"
	issue_294_14			= bits,    U32,   	76, [14:14], "false", "true"
	issue_294_15			= bits,    U32,   	76, [15:15], "false", "true"
	issue_294_16			= bits,    U32,   	76, [16:16], "false", "true"
	issue_294_17			= bits,    U32,   	76, [17:17], "false", "true"
	issue_294_18			= bits,    U32,   	76, [18:18], "false", "true"
	issue_294_19			= bits,    U32,   	76, [19:19], "false", "true"
	issue_294_21			= bits,    U32,   	76, [20:20], "false", "true"
	issue_294_22			= bits,    U32,   	76, [21:21], "false", "true"
	issue_294_23			= bits,    U32,   	76, [22:22], "false", "true"
	issue_294_24			= bits,    U32,   	76, [23:23], "false", "true"
	issue_294_25			= bits,    U32,   	76, [24:24], "false", "true"
	issue_294_26			= bits,    U32,   	76, [25:25], "false", "true"
	issue_294_27			= bits,    U32,   	76, [26:26], "false", "true"
	issue_294_28			= bits,    U32,   	76, [27:27], "false", "true"
	issue_294_29			= bits,    U32,   	76, [28:28], "false", "true"
	tpsMin							= scalar, S16,	80,	"ADC", 1, 0, 0, 1023, 0
	tpsMax							= scalar, S16,	82,	"ADC", 1, 0, 0, 1023, 0
	tpsErrorDetectionTooLow			= scalar, S16,	84,	"%", 1, 0, -40, 200, 0
	tpsErrorDetectionTooHigh		= scalar, S16,	86,	"%", 1, 0, -40, 200, 0
	cranking_baseFuel				= scalar, F32,	88,	"ms", 1, 0, 0, 200, 1
	cranking_rpm					= scalar, S16,	92,	"RPM", 1, 0, 0, 3000, 0
;no TS info - skipping cranking_alignmentFill offset 94
	primingSquirtDurationMs			= scalar, F32,	96,	"*C", 1, 0, -40, 200, 1
	ignitionDwellForCrankingMs		= scalar, F32,	100,	"ms", 1, 0, 0, 200, 1
	crankingChargeAngle				= scalar, F32,	104,	"deg", 1, 0, 0, 3000.0, 0
	map_samplingAngleBins			= array, F32,	108,	[8],	"", 1, 0, 0.0, 18000, 2
	map_samplingAngle				= array, F32,	140,	[8],	"deg", 1, 0, -720, 720, 2
	map_samplingWindowBins			= array, F32,	172,	[8],	"", 1, 0, 0.0, 18000, 2
	map_samplingWindow				= array, F32,	204,	[8],	"deg", 1, 0, -720, 720, 2
	map_sensor_lowValue				= scalar, F32,	236,	"kpa", 1, 0, -400, 800, 2
	map_sensor_highValue			= scalar, F32,	240,	"kpa", 1, 0, -400, 800, 2
	map_sensor_type				 = bits, U32, 244, [0:3] "Custom", "DENSO183", "MPX4250", "HONDA3BAR", "NEON_2003", "22012AA090", "3 Bar", "MPX4100", "Toyota 89420-02010", "MPX4250A", "INVALID"
	map_sensor_hwChannel		 = bits, U32, 248, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	clt_tempC_1						= scalar, F32,	252,	"*C", 1, 0, -40, 200, 1
	clt_tempC_2						= scalar, F32,	256,	"*C", 1, 0, -40, 200, 1
	clt_tempC_3						= scalar, F32,	260,	"*C", 1, 0, -40, 200, 1
	clt_resistance_1				= scalar, F32,	264,	"Ohm", 1, 0, 0, 200000, 1
	clt_resistance_2				= scalar, F32,	268,	"Ohm", 1, 0, 0, 200000, 1
	clt_resistance_3				= scalar, F32,	272,	"Ohm", 1, 0, 0, 200000, 1
	clt_bias_resistor				= scalar, F32,	276,	"Ohm", 1, 0, 0, 200000, 1
	clt_adcChannel				 = bits, U32, 280, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	iat_tempC_1						= scalar, F32,	284,	"*C", 1, 0, -40, 200, 1
	iat_tempC_2						= scalar, F32,	288,	"*C", 1, 0, -40, 200, 1
	iat_tempC_3						= scalar, F32,	292,	"*C", 1, 0, -40, 200, 1
	iat_resistance_1				= scalar, F32,	296,	"Ohm", 1, 0, 0, 200000, 1
	iat_resistance_2				= scalar, F32,	300,	"Ohm", 1, 0, 0, 200000, 1
	iat_resistance_3				= scalar, F32,	304,	"Ohm", 1, 0, 0, 200000, 1
	iat_bias_resistor				= scalar, F32,	308,	"Ohm", 1, 0, 0, 200000, 1
	iat_adcChannel				 = bits, U32, 312, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	step1rpm						= scalar, S32,	316,	"rpm", 1, 0, 0, 20000.0, 2
	step1timing						= scalar, S32,	320,	"deg", 1, 0, -180, 180, 2
	hip9011PrescalerAndSDO			= scalar, S32,	324,	"integer", 1, 0.0, 0.0, 32, 0
	knockBandCustom					= scalar, F32,	328,	"kHz", 1, 0.0, 0.0, 10.0, 2
	sparkDwellRpmBins				= array, F32,	332,	[8],	"RPM", 1, 0.0, 0.0, 18000, 2
	sparkDwellValues				= array, F32,	364,	[8],	"ms", 1, 0.0, 0.0, 30.0, 2
	displacement					= scalar, F32,	396,	"L", 1, 0, 0, 1000.0, 2
	cylindersCount				 = bits, U32, 400, [0:3], "INVALID", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, "INVALID", "INVALID", "INVALID"
	firingOrder					 = bits, U32, 404, [0:4], "One Cylinder", "1-3-4-2", "1-2-4-3", "1-3-2-4", "1-5-3-6-2-4", "1-8-4-3-6-5-7-2", "1-2-4-5-3", "1-4-2-5-3-6", "1-2", "1_2_3_4_5_6", "1-2-3", "1-8-7-2-6-5-4-3", "1-5-4-2-6-3-7-8", "1-6-3-2-5-4", "1-10-9-4-3-6-5-8-7_2", "1-7-5-11-3-9-6-12-2-8-4-10", "1-7-4-10-2-8-6-12-3-9-5-11", "fo17", "fo18", "fo19", "fo20", "INVALID"
	cylinderBore					= scalar, F32,	408,	"mm", 1, 0, 0, 20000.0, 2
	sensorSnifferRpmThreshold		= scalar, S32,	412,	"RPM", 1, 0, 0,30000, 0
	rpmHardLimit					= scalar, S32,	416,	"rpm", 1, 0, 0, 20000.0, 2
	fuelAlgorithm				 = bits, U32, 420, [0:1], "MAF", "Alpha-N/TPS", "MAP", "SPEED DENSITY"
	crankingInjectionMode		 = bits, U32, 424, [0:1], "Simultaneous", "Sequential", "Batch", "Single Point"
	injectionMode				 = bits, U32, 428, [0:1], "Simultaneous", "Sequential", "Batch", "Single Point"
	extraInjectionOffset			= scalar, F32,	432,	"deg", 1, 0.0, -720, 720, 2
	crankingTimingAngle				= scalar, F32,	436,	 "deg", 1, 0.0, -360, 360, 2
	ignitionMode				 = bits, U32, 440, [0:1], "One coil", "Individual Coils", "Wasted", "INVALID"
	ignitionOffset					= scalar, F32,	444,	"RPM", 1, 0, 0, 3000.0, 0
	timingMode					 = bits, U32, 448 [0:0], "dynamic", "fixed"
	fixedModeTiming					= scalar, F32,	452,	"RPM", 1, 0, 0, 3000.0, 0
	globalTriggerAngleOffset		= scalar, F32,	456,	"deg", 1, 0, -720, 720, 0
	analogInputDividerCoefficient		= scalar, F32,	460,	"coef", 1, 0, 0.01, 10.0, 2
	vbattDividerCoeff				= scalar, F32,	464,	"coef", 1, 0, 0.01, 99.0, 2
	vbattAdcChannel				 = bits, U32, 468, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fanOnTemperature				= scalar, F32,	472,	"*C", 1, 0, 0, 1000.0, 0
	fanOffTemperature				= scalar, F32,	476,	"*C", 1, 0, 0, 1000.0, 0
	fuelLevelSensor				 = bits, U32, 480, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	vehicleSpeedCoef				= scalar, F32,	484,	"coef", 1, 0, 0.01, 2000.0, 2
	canNbcType					 = bits, U32, 488, [0:1], "BMW", "FIAT", "VAG" , "MAZDA RX8"
	canSleepPeriod					= scalar, S32,	492,	"ms", 1, 0, 0, 1000.0, 2
	operationMode				 = bits, U32, 496, [0:2], "INVALID", "4 stroke without cam sensor", "4 stroke with cam sensor", "2 stroke", "4 stroke with symmetrical crank", "INVALID", "INVALID", "INVALID"
	displayMode					 = bits, U32, 500, [0:1], "none", "hd44780", "hd44780 over pcf8574", "INVALID"
	logFormat					 = bits, U32, 504, [0:0], "native", "Mega Log Viewer"
	byFirmwareVersion				= scalar, S32,	508,	"index", 1, 0, 0, 300, 0
	HD44780width					= scalar, S32,	512,	"index", 1, 0, 0, 300, 0
	HD44780height					= scalar, S32,	516,	"index", 1, 0, 0, 300, 0
	tpsAdcChannel				 = bits, U32, 520, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping overrideCrankingIgnition offset 524
	sensorChartFrequency			= scalar, S32,	528,	"index", 1, 0, 0, 300, 0 ; size 4
	trigger_type				 = bits, U32, 532, [0:5], "custom toothed wheel", "Ford Aspire", "Dodge Neon 1995", "Miata NA", "Miata NB", "GM_7X", "Cooper R50", "Mazda SOHC 4", "60/2", "36/1", "Honda 4+24+1", "Mitsubishi", "Honda 4+24", "Honda 1+4+24", "Dodge Neon 2003", "Mazda DOHC 1+4", "1+1", "1+60/2", "Single Tooth", "Dodge Ram 1+16", "60/2 VW", "Honda 1+24", "Dodge Stratus", "36_2_2_2", "Nissan Primera", "2JZ", "Rover K", "GM LS 24", "Honda CBR 600", "2JZ_1_12", "Honda CBR 600 custom", "3/1 skipped" , "Dodge Neon 2003 crank", "Miata VVT", "trg34", "trg35", "Subaru 7+6", "Jeep 18-2-2-2", "WIP", "Dodge Neon 1995 crank only", "trg40", "trg41", "trg42", "INVALID"
	trigger_unusedCustomIsSynchronizationNeeded= bits,    U32,   	536, [0:0], "false", "true"
	trigger_unusedCustomNeedSecondTriggerInput= bits,    U32,   	536, [1:1], "false", "true"
	trigger_useOnlyFirstChannel= bits,    U32,   	536, [2:2], "false", "true"
	trigger_customTotalToothCount		= scalar, S32,	540,	"number", 1, 0.0, 0, 500.0, 0
	trigger_customSkippedToothCount		= scalar, S32,	544,	"number", 1, 0.0, 0, 500.0, 0
	hip9011SpiDevice			 = bits,U32, 548, [0:1], "Off", "SPI1", "SPI2", "SPI3"
	globalFuelCorrection			= scalar, F32,	552,	"coef", 1, 0.0, 0, 1000.0, 2
	adcVcc							= scalar, F32,	556,	 "volts", 1, 0.0, 0, 4.0, 3
;no TS info - skipping maxKnockSubDeg offset 560
	mafAdcChannel				 = bits, U32, 564, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	afr_hwChannel				 = bits, U32, 568, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	afr_v1							= scalar, F32,	572,	 "volts", 1, 0.0, 0, 10.0, 2
	afr_value1						= scalar, F32,	576,	 "AFR", 1, 0.0, 0, 1000.0, 2
	afr_v2							= scalar, F32,	580,	 "volts", 1, 0.0, 0, 10.0, 2
	afr_value2						= scalar, F32,	584,	 "AFR", 1, 0.0, 0, 1000.0, 2
	pedalPositionChannel		 = bits, U32, 588, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	baroSensor_lowValue				= scalar, F32,	592,	"kpa", 1, 0, -400, 800, 2
	baroSensor_highValue			= scalar, F32,	596,	"kpa", 1, 0, -400, 800, 2
	baroSensor_type				 = bits, U32, 600, [0:3] "Custom", "DENSO183", "MPX4250", "HONDA3BAR", "NEON_2003", "22012AA090", "3 Bar", "MPX4100", "Toyota 89420-02010", "MPX4250A", "INVALID"
	baroSensor_hwChannel		 = bits, U32, 604, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_solenoidPin			 = bits, U32, 608, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_solenoidPinMode		 = bits, U32, 612, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	idle_solenoidFrequency			= scalar, S32,	616,	"Hz", 1, 0, 0, 3000, 0
	idle_stepperDirectionPin	 = bits, U32, 620, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_stepperStepPin			 = bits, U32, 624, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	manIdlePosition					= scalar, F32,	628,	"%", 1, 0, 0, 100, 0
	fuelPumpPin					 = bits, U32, 632, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fuelPumpPinMode				 = bits, U32, 636, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	injectionPins1				 = bits, U32, 640, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins2				 = bits, U32, 644, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins3				 = bits, U32, 648, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins4				 = bits, U32, 652, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins5				 = bits, U32, 656, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins6				 = bits, U32, 660, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins7				 = bits, U32, 664, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins8				 = bits, U32, 668, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins9				 = bits, U32, 672, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins10				 = bits, U32, 676, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins11				 = bits, U32, 680, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPins12				 = bits, U32, 684, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	injectionPinMode			 = bits, U32, 688, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	ignitionPins1				 = bits, U32, 692, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins2				 = bits, U32, 696, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins3				 = bits, U32, 700, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins4				 = bits, U32, 704, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins5				 = bits, U32, 708, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins6				 = bits, U32, 712, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins7				 = bits, U32, 716, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins8				 = bits, U32, 720, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins9				 = bits, U32, 724, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins10				 = bits, U32, 728, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins11				 = bits, U32, 732, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPins12				 = bits, U32, 736, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignitionPinMode				 = bits, U32, 740, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	malfunctionIndicatorPin		 = bits, U32, 744, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	malfunctionIndicatorPinMode	 = bits, U32, 748, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	fanPin						 = bits, U32, 752, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fanPinMode					 = bits, U32, 756, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	mapFrequency0Kpa				= scalar, F32,	760,	"Hz", 1, 0, 0, 100000, 2
	mapFrequency100Kpa				= scalar, F32,	764,	"Hz", 1, 0, 0, 100000, 2
	clutchDownPin				 = bits, U32, 768, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	clutchDownPinMode			 = scalar, F32, 772, "ms", 1, 0, 0, 200, 1
	alternatorControlPin		 = bits, U32, 776, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	alternatorControlPinMode	 = bits, U32, 780, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	HD44780_rs					 = bits, U32, 784, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	HD44780_e					 = bits, U32, 788, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	HD44780_db4					 = bits, U32, 792, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	HD44780_db5					 = bits, U32, 796, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	HD44780_db6					 = bits, U32, 800, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	HD44780_db7					 = bits, U32, 804, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	gps_rx_pin					 = bits, U32, 808, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	gps_tx_pin					 = bits, U32, 812, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerSimulatorFrequency		= scalar, S32,	816,	"Rpm", 1, 0, 0,30000, 0
	digitalPotentiometerSpiDevice	 = bits,U32, 820, [0:1], "Off", "SPI1", "SPI2", "SPI3"
	digitalPotentiometerChipSelect1	 = bits, U32, 824, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	digitalPotentiometerChipSelect2	 = bits, U32, 828, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	digitalPotentiometerChipSelect3	 = bits, U32, 832, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	digitalPotentiometerChipSelect4	 = bits, U32, 836, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbDirectionPin1			 = bits, U32, 840, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbDirectionPin2			 = bits, U32, 844, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbControlPin1				 = bits, U32, 848, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbControlPin2				 = bits, U32, 852, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	electronicThrottlePin1Mode	 = bits, U32, 856, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	wboHeaterPin				 = bits, U32, 860, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	cj125CsPin					 = bits, U32, 864, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fuelLevelEmptyTankVoltage		= scalar, F32,	868,	"V", 1, 0, 0,10, 2
	fuelLevelFullTankVoltage		= scalar, F32,	872,	"V", 1, 0, 0,10, 2
	afr_type					 = bits, S32, 876, [0:2], "BPSX", "Innovate", "14Point7", "Narrow", "PLX", "Custom"
	fuelClosedLoopAfrLowThreshold		= scalar, F32,	880,	"ratio", 1, 0, 0, 100, 1
	hip9011CsPinMode			 = bits, U32, 884, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	tachOutputPin				 = bits, U32, 888, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	tachOutputPinMode			 = bits, U32, 892, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	triggerInputPins1			 = bits, U32, 896, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerInputPins2			 = bits, U32, 900, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerInputPins3			 = bits, U32, 904, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	mainRelayPin				 = bits, U32, 908, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping idleThreadPeriod offset 912
;no TS info - skipping consoleLoopPeriod offset 916
;no TS info - skipping lcdThreadPeriod offset 920
	sdCardCsPin					 = bits, U32, 924, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping generalPeriodicThreadPeriod offset 928
	tunerStudioSerialSpeed			= scalar, U32,	932,	"BPs", 1, 0, 0,1000000, 0
	boardTestModeJumperPin		 = bits, U32, 936, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping canDeviceMode offset 940
	canTxPin					 = bits, U32, 944, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	canRxPin					 = bits, U32, 948, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerSimulatorPins1		 = bits, U32, 952, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerSimulatorPins2		 = bits, U32, 956, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerSimulatorPins3		 = bits, U32, 960, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerSimulatorPinModes1	 = bits, U32, 964, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	triggerSimulatorPinModes2	 = bits, U32, 968, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	triggerSimulatorPinModes3	 = bits, U32, 972, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	o2heaterPin					 = bits, U32, 976, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	o2heaterPinModeTodO			 = bits, U32, 980, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	is_enabled_spi_1		= bits,    U32,   	984, [0:0], "false", "true"
	is_enabled_spi_2		= bits,    U32,   	984, [1:1], "false", "true"
	is_enabled_spi_3		= bits,    U32,   	984, [2:2], "false", "true"
	isSdCardEnabled			= bits,    U32,   	984, [3:3], "false", "true"
	isFastAdcEnabled		= bits,    U32,   	984, [4:4], "false", "true"
	isEngineControlEnabled	= bits,    U32,   	984, [5:5], "false", "true"
	isHip9011Enabled		= bits,    U32,   	984, [6:6], "false", "true"
	isVerboseAlternator		= bits,    U32,   	984, [7:7], "false", "true"
	useSerialPort			= bits,    U32,   	984, [8:8], "false", "true"
	useStepperIdle			= bits,    U32,   	984, [9:9], "false", "true"
	enabledStep1Limiter		= bits,    U32,   	984, [10:10], "false", "true"
	useTpicAdvancedMode		= bits,    U32,   	984, [11:11], "false", "true"
	useLcdScreen			= bits,    U32,   	984, [12:12], "false", "true"
	startConsoleInBinaryMode= bits,    U32,   	984, [13:13], "false", "true"
	useWarmupPidAfr			= bits,    U32,   	984, [14:14], "false", "true"
	onOffAlternatorLogic	= bits,    U32,   	984, [15:15], "false", "true"
	isCJ125Enabled			= bits,    U32,   	984, [16:16], "false", "true"
	vvtCamSensorUseRise		= bits,    U32,   	984, [17:17], "false", "true"
	measureMapOnlyInOneCylinder= bits,    U32,   	984, [18:18], "false", "true"
	stepperForceParkingEveryRestart= bits,    U32,   	984, [19:19], "false", "true"
	isFasterEngineSpinUpEnabled= bits,    U32,   	984, [20:20], "false", "true"
	coastingFuelCutEnabled	= bits,    U32,   	984, [21:21], "false", "true"
	useIacTableForCoasting	= bits,    U32,   	984, [22:22], "false", "true"
	useNoiselessTriggerDecoder= bits,    U32,   	984, [23:23], "false", "true"
	unused_board_984_24		= bits,    U32,   	984, [24:24], "false", "true"
	unused_board_984_25		= bits,    U32,   	984, [25:25], "false", "true"
	unused_board_984_26		= bits,    U32,   	984, [26:26], "false", "true"
	unused_board_984_27		= bits,    U32,   	984, [27:27], "false", "true"
	unused_board_984_28		= bits,    U32,   	984, [28:28], "false", "true"
	unused_board_984_29		= bits,    U32,   	984, [29:29], "false", "true"
	unused_board_984_30		= bits,    U32,   	984, [30:30], "false", "true"
	logicAnalyzerPins1			 = bits, U32, 988, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	logicAnalyzerPins2			 = bits, U32, 992, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	logicAnalyzerPins3			 = bits, U32, 996, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	logicAnalyzerPins4			 = bits, U32, 1000, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping logicAnalyzerMode offset 1004
;no TS info - skipping unrealisticRpmThreashold offset 1008
	mainRelayPinMode			 = bits, U32, 1012, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	max31855_cs1				 = bits, U32, 1016, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855_cs2				 = bits, U32, 1020, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855_cs3				 = bits, U32, 1024, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855_cs4				 = bits, U32, 1028, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855_cs5				 = bits, U32, 1032, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855_cs6				 = bits, U32, 1036, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855_cs7				 = bits, U32, 1040, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855_cs8				 = bits, U32, 1044, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	max31855spiDevice			 = bits,U32, 1048, [0:1], "Off", "SPI1", "SPI2", "SPI3"
	fsioOutputPins1				 = bits, U32, 1052, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins2				 = bits, U32, 1056, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins3				 = bits, U32, 1060, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins4				 = bits, U32, 1064, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins5				 = bits, U32, 1068, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins6				 = bits, U32, 1072, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins7				 = bits, U32, 1076, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins8				 = bits, U32, 1080, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins9				 = bits, U32, 1084, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins10			 = bits, U32, 1088, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins11			 = bits, U32, 1092, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins12			 = bits, U32, 1096, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins13			 = bits, U32, 1100, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins14			 = bits, U32, 1104, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins15			 = bits, U32, 1108, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioOutputPins16			 = bits, U32, 1112, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	gpioPinModes1				 = bits, U32, 1116, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes2				 = bits, U32, 1120, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes3				 = bits, U32, 1124, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes4				 = bits, U32, 1128, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes5				 = bits, U32, 1132, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes6				 = bits, U32, 1136, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes7				 = bits, U32, 1140, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes8				 = bits, U32, 1144, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes9				 = bits, U32, 1148, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes10				 = bits, U32, 1152, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes11				 = bits, U32, 1156, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes12				 = bits, U32, 1160, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes13				 = bits, U32, 1164, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes14				 = bits, U32, 1168, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes15				 = bits, U32, 1172, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	gpioPinModes16				 = bits, U32, 1176, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	consoleUartDevice			 = bits,U32, 1180, [0:1], "Off", "UART1", "UART2", "UART3"
	mapMinBufferLength				= scalar, S32,	1184,	"count", 1, 0, 0, 24, 0
	idlePidDeactivationTpsThreshold		= scalar, S16,	1188,	"%", 1, 0, 0, 100.0, 0
	stepperParkingExtraSteps		= scalar, S16,	1190,	"%", 1, 0, 0, 3000.0, 0
	nb2ratioFrom					= scalar, F32,	1192,	"value", 1, 0, 0, 1000, 5
	nb2ratioTo						= scalar, F32,	1196,	"value", 1, 0, 0, 1000, 5
	triggerErrorPin				 = bits, U32, 1200, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerErrorPinMode			 = bits, U32, 1204, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	acRelayPin					 = bits, U32, 1208, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	acRelayPinMode				 = bits, U32, 1212, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	fsioFrequency1				 = scalar, U16, 1216, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency2				 = scalar, U16, 1218, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency3				 = scalar, U16, 1220, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency4				 = scalar, U16, 1222, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency5				 = scalar, U16, 1224, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency6				 = scalar, U16, 1226, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency7				 = scalar, U16, 1228, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency8				 = scalar, U16, 1230, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency9				 = scalar, U16, 1232, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency10				 = scalar, U16, 1234, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency11				 = scalar, U16, 1236, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency12				 = scalar, U16, 1238, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency13				 = scalar, U16, 1240, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency14				 = scalar, U16, 1242, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency15				 = scalar, U16, 1244, "Hz", 1, 0, 0, 3000, 0
	fsioFrequency16				 = scalar, U16, 1246, "Hz", 1, 0, 0, 3000, 0
	hip9011CsPin				 = bits, U32, 1248, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	hip9011IntHoldPin			 = bits, U32, 1252, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	hip9011IntHoldPinMode		 = bits, U32, 1256, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	fsio_setting1				 = scalar, F32, 1260, "Val", 1, 0, 0, 18000, 4
	fsio_setting2				 = scalar, F32, 1264, "Val", 1, 0, 0, 18000, 4
	fsio_setting3				 = scalar, F32, 1268, "Val", 1, 0, 0, 18000, 4
	fsio_setting4				 = scalar, F32, 1272, "Val", 1, 0, 0, 18000, 4
	fsio_setting5				 = scalar, F32, 1276, "Val", 1, 0, 0, 18000, 4
	fsio_setting6				 = scalar, F32, 1280, "Val", 1, 0, 0, 18000, 4
	fsio_setting7				 = scalar, F32, 1284, "Val", 1, 0, 0, 18000, 4
	fsio_setting8				 = scalar, F32, 1288, "Val", 1, 0, 0, 18000, 4
	fsio_setting9				 = scalar, F32, 1292, "Val", 1, 0, 0, 18000, 4
	fsio_setting10				 = scalar, F32, 1296, "Val", 1, 0, 0, 18000, 4
	fsio_setting11				 = scalar, F32, 1300, "Val", 1, 0, 0, 18000, 4
	fsio_setting12				 = scalar, F32, 1304, "Val", 1, 0, 0, 18000, 4
	fsio_setting13				 = scalar, F32, 1308, "Val", 1, 0, 0, 18000, 4
	fsio_setting14				 = scalar, F32, 1312, "Val", 1, 0, 0, 18000, 4
	fsio_setting15				 = scalar, F32, 1316, "Val", 1, 0, 0, 18000, 4
	fsio_setting16				 = scalar, F32, 1320, "Val", 1, 0, 0, 18000, 4
	spi1mosiPin					 = bits, U32, 1324, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi1misoPin					 = bits, U32, 1328, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi1sckPin					 = bits, U32, 1332, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi2mosiPin					 = bits, U32, 1336, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi2misoPin					 = bits, U32, 1340, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi2sckPin					 = bits, U32, 1344, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi3mosiPin					 = bits, U32, 1348, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi3misoPin					 = bits, U32, 1352, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi3sckPin					 = bits, U32, 1356, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping hip9011Gain offset 1360
	joystickCenterPin			 = bits, U32, 1364, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	joystickAPin				 = bits, U32, 1368, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	joystickBPin				 = bits, U32, 1372, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	joystickCPin				 = bits, U32, 1376, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	joystickDPin				 = bits, U32, 1380, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	sensorChartMode				 = bits, S32, 1384, [0:2], "none", "trigger", "MAP", "RPM ACCEL", "DETAILED RPM", "INVALID"
;no TS info - skipping mafSensorType offset 1388
	vehicleSpeedSensorInputPin	 = bits, U32, 1392, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	clutchUpPin					 = bits, U32, 1396, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	clutchUpPinMode				 = scalar, F32, 1400, "ms", 1, 0, 0, 200, 1
	fsioDigitalInputs1			 = bits, U32, 1404, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs2			 = bits, U32, 1408, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs3			 = bits, U32, 1412, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs4			 = bits, U32, 1416, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs5			 = bits, U32, 1420, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs6			 = bits, U32, 1424, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs7			 = bits, U32, 1428, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs8			 = bits, U32, 1432, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs9			 = bits, U32, 1436, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs10			 = bits, U32, 1440, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs11			 = bits, U32, 1444, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs12			 = bits, U32, 1448, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs13			 = bits, U32, 1452, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs14			 = bits, U32, 1456, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs15			 = bits, U32, 1460, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioDigitalInputs16			 = bits, U32, 1464, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	frequencyReportingMapInputPin	 = bits, U32, 1468, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	vvtDisplayInverted		= bits,    U32,   	1472, [0:0], "false", "true"
	fuelClosedLoopCorrectionEnabled= bits,    U32,   	1472, [1:1], "false", "true"
	isVerboseIAC			= bits,    U32,   	1472, [2:2], "false", "true"
	isVerboseETB			= bits,    U32,   	1472, [3:3], "false", "true"
	useConstantDwellDuringCranking= bits,    U32,   	1472, [4:4], "false", "true"
	isEngineChartEnabled	= bits,    U32,   	1472, [5:5], "false", "true"
	silentTriggerError		= bits,    U32,   	1472, [6:6], "false", "true"
	useLinearCltSensor		= bits,    U32,   	1472, [7:7], "false", "true"
	canReadEnabled			= bits,    U32,   	1472, [8:8], "false", "true"
	canWriteEnabled			= bits,    U32,   	1472, [9:9], "false", "true"
	useLinearIatSensor		= bits,    U32,   	1472, [10:10], "false", "true"
	useFSIO16ForTimingAdjustment= bits,    U32,   	1472, [11:11], "false", "true"
	tachPulseDurationAsDutyCycle= bits,    U32,   	1472, [12:12], "false", "true"
	isAlternatorControlEnabled= bits,    U32,   	1472, [13:13], "false", "true"
	invertPrimaryTriggerSignal= bits,    U32,   	1472, [14:14], "false", "true"
	invertSecondaryTriggerSignal= bits,    U32,   	1472, [15:15], "false", "true"
	cutFuelOnHardLimit		= bits,    U32,   	1472, [16:16], "false", "true"
	cutSparkOnHardLimit		= bits,    U32,   	1472, [17:17], "false", "true"
	step1fuelCutEnable		= bits,    U32,   	1472, [18:18], "false", "true"
	step1SparkCutEnable		= bits,    U32,   	1472, [19:19], "false", "true"
	hasFrequencyReportingMapSensor= bits,    U32,   	1472, [20:20], "false", "true"
	useFSIO8ForServo1		= bits,    U32,   	1472, [21:21], "false", "true"
	useFSIO9ForServo2		= bits,    U32,   	1472, [22:22], "false", "true"
	useFSIO10ForServo3		= bits,    U32,   	1472, [23:23], "false", "true"
	useFSIO11ForServo4		= bits,    U32,   	1472, [24:24], "false", "true"
	useFSIO12ForServo5		= bits,    U32,   	1472, [25:25], "false", "true"
	unused_bit_1472_26		= bits,    U32,   	1472, [26:26], "false", "true"
	unused_bit_1472_27		= bits,    U32,   	1472, [27:27], "false", "true"
	hipOutputChannel			 = bits, U32, 1476, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idleMode					 = bits, U32, 1480, [0:0], "Automatic", "Manual"
	isInjectionEnabled		= bits,    U32,   	1484, [0:0], "false", "true"
	isIgnitionEnabled		= bits,    U32,   	1484, [1:1], "false", "true"
	isCylinderCleanupEnabled= bits,    U32,   	1484, [2:2], "false", "true"
	secondTriggerChannelEnabled= bits,    U32,   	1484, [3:3], "false", "true"
	needSecondTriggerInputDeprecated= bits,    U32,   	1484, [4:4], "false", "true"
	isMapAveragingEnabled	= bits,    U32,   	1484, [5:5], "false", "true"
	overrideCrankingIacSetting= bits,    U32,   	1484, [6:6], "false", "true"
	useSeparateAdvanceForIdle= bits,    U32,   	1484, [7:7], "false", "true"
	isTunerStudioEnabled	= bits,    U32,   	1484, [8:8], "false", "true"
	isWaveAnalyzerEnabled	= bits,    U32,   	1484, [9:9], "false", "true"
	useSeparateVeForIdle	= bits,    U32,   	1484, [10:10], "false", "true"
	isPrintTriggerSynchDetails= bits,    U32,   	1484, [11:11], "false", "true"
	isManualSpinningMode	= bits,    U32,   	1484, [12:12], "false", "true"
	twoWireBatchInjection	= bits,    U32,   	1484, [13:13], "false", "true"
	useOnlyRisingEdgeForTrigger= bits,    U32,   	1484, [14:14], "false", "true"
	twoWireBatchIgnition	= bits,    U32,   	1484, [15:15], "false", "true"
	useFixedBaroCorrFromMap	= bits,    U32,   	1484, [16:16], "false", "true"
	useSeparateAdvanceForCranking= bits,    U32,   	1484, [17:17], "false", "true"
	useAdvanceCorrectionsForCranking= bits,    U32,   	1484, [18:18], "false", "true"
	unused_1484_bit_19		= bits,    U32,   	1484, [19:19], "false", "true"
	unused_1484_bit_20		= bits,    U32,   	1484, [20:20], "false", "true"
	unused_1484_bit_21		= bits,    U32,   	1484, [21:21], "false", "true"
	engineChartSize					= scalar, U32,	1488,	"count", 1, 0, 0, 300, 0
	idlePidRpmUpperLimit			= scalar, S16,	1492,	"RPM", 1, 0, 0, 9000, 0
	primeInjFalloffTemperature		= scalar, S16,	1494,	"*C", 1, 0, 0, 1000.0, 0
	acSwitchAdc					 = bits, U32, 1496, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	ignMathCalculateAtIndex			= scalar, S32,	1500,	"index", 1, 0, 0, 7000, 0
;no TS info - skipping acCutoffLowRpm offset 1504
;no TS info - skipping acCutoffHighRpm offset 1506
;no TS info - skipping acIdleRpmBump offset 1508
	warningPeriod					= scalar, S16,	1510,	"seconds", 1, 0, 0, 60, 0
	vRefAdcChannel				 = bits, U32, 1512, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping knockDetectionWindowStart offset 1516
;no TS info - skipping knockDetectionWindowEnd offset 1520
	idleStepperReactionTime			= scalar, F32,	1524,	"ms", 1, 0, 1, 300, 0
	knockVThreshold					= scalar, F32,	1528,	"V", 1, 0, 1, 5, 2
	fsioInputModes1				 = scalar, F32, 1532, "ms", 1, 0, 0, 200, 1
	fsioInputModes2				 = scalar, F32, 1536, "ms", 1, 0, 0, 200, 1
	fsioInputModes3				 = scalar, F32, 1540, "ms", 1, 0, 0, 200, 1
	fsioInputModes4				 = scalar, F32, 1544, "ms", 1, 0, 0, 200, 1
	fsioInputModes5				 = scalar, F32, 1548, "ms", 1, 0, 0, 200, 1
	fsioInputModes6				 = scalar, F32, 1552, "ms", 1, 0, 0, 200, 1
	fsioInputModes7				 = scalar, F32, 1556, "ms", 1, 0, 0, 200, 1
	fsioInputModes8				 = scalar, F32, 1560, "ms", 1, 0, 0, 200, 1
	fsioInputModes9				 = scalar, F32, 1564, "ms", 1, 0, 0, 200, 1
	fsioInputModes10			 = scalar, F32, 1568, "ms", 1, 0, 0, 200, 1
	fsioInputModes11			 = scalar, F32, 1572, "ms", 1, 0, 0, 200, 1
	fsioInputModes12			 = scalar, F32, 1576, "ms", 1, 0, 0, 200, 1
	fsioInputModes13			 = scalar, F32, 1580, "ms", 1, 0, 0, 200, 1
	fsioInputModes14			 = scalar, F32, 1584, "ms", 1, 0, 0, 200, 1
	fsioInputModes15			 = scalar, F32, 1588, "ms", 1, 0, 0, 200, 1
	fsioInputModes16			 = scalar, F32, 1592, "ms", 1, 0, 0, 200, 1
	externalKnockSenseAdc		 = bits, U32, 1596, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping unsed2342342 offset 1600
	idleStepperTotalSteps			= scalar, S32,	1612,	"count", 1, 0, 5, 3000, 0
	stepperEnablePin			 = bits, U32, 1616, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	noAccelAfterHardLimitPeriodSecs		= scalar, F32,	1620,	"sec", 1, 0, 0, 60, 0
	mapAveragingSchedulingAtIndex		= scalar, S32,	1624,	"index", 1, 0, 0, 7000, 0
	baroCorrPressureBins			= array, F32,	1628,	[4],	"kPa", 1, 0, 0.0, 200, 2
	baroCorrRpmBins					= array, F32,	1644,	[4],	"RPM", 1, 0, 0.0, 18000, 2
	baroCorrTable				 = array, F32, 1660, [4x4],"%", 1, 0, 0, 999.0, 2
	spi2SckMode					 = bits, U32, 1724, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	spi2MosiMode				 = bits, U32, 1728, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	spi2MisoMode				 = bits, U32, 1732, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	crankingTpsCoef					= array, F32,	1736,	[8],	"%", 1, 0, 0.0, 700.0, 2
	crankingTpsBins					= array, F32,	1768,	[8],	"%", 1, 0, 0.0, 100.0, 2
	tachPulseDuractionMs			= scalar, F32,	1800,	"ms", 1, 0, 0.0, 100.0, 2
	tachPulseTriggerIndex			= scalar, S32,	1804,	"index", 1, 0, 0.0, 360.0, 0
	suckedOffCoef					= scalar, F32,	1808,	"%", 1, 0, 0.0, 300.0, 2
	alternatorControl_pFactor		= scalar, F32,	1812,	"", 1, 0, -10000, 10000, 7
	alternatorControl_iFactor		= scalar, F32,	1816,	"", 1, 0, -10000, 10000, 7
	alternatorControl_dFactor		= scalar, F32,	1820,	"", 1, 0, -10000, 10000, 7
	alternatorControl_offset		= scalar, S16,	1824,	"", 1, 0, 0, 1000, 0
	alternatorControl_period		= scalar, S16,	1826,	"ms", 1, 0, 0, 3000, 0
	alternatorControl_minValue		= scalar, S16,	1828,	"", 1, 0, -3000, 3000.0, 3
	alternatorControl_maxValue		= scalar, S16,	1830,	"", 1, 0, -3000, 3000.0, 3
	etb_pFactor						= scalar, F32,	1832,	"", 1, 0, -10000, 10000, 7
	etb_iFactor						= scalar, F32,	1836,	"", 1, 0, -10000, 10000, 7
	etb_dFactor						= scalar, F32,	1840,	"", 1, 0, -10000, 10000, 7
	etb_offset						= scalar, S16,	1844,	"", 1, 0, 0, 1000, 0
	etb_period						= scalar, S16,	1846,	"ms", 1, 0, 0, 3000, 0
	etb_minValue					= scalar, S16,	1848,	"", 1, 0, -3000, 3000.0, 3
	etb_maxValue					= scalar, S16,	1850,	"", 1, 0, -3000, 3000.0, 3
	warmupAfrPid_pFactor			= scalar, F32,	1852,	"", 1, 0, -10000, 10000, 7
	warmupAfrPid_iFactor			= scalar, F32,	1856,	"", 1, 0, -10000, 10000, 7
	warmupAfrPid_dFactor			= scalar, F32,	1860,	"", 1, 0, -10000, 10000, 7
	warmupAfrPid_offset				= scalar, S16,	1864,	"", 1, 0, 0, 1000, 0
	warmupAfrPid_period				= scalar, S16,	1866,	"ms", 1, 0, 0, 3000, 0
	warmupAfrPid_minValue			= scalar, S16,	1868,	"", 1, 0, -3000, 3000.0, 3
	warmupAfrPid_maxValue			= scalar, S16,	1870,	"", 1, 0, -3000, 3000.0, 3
	mapErrorDetectionTooLow			= scalar, F32,	1872,	"kPa", 1, 0, -100.0, 100.0, 2
	mapErrorDetectionTooHigh		= scalar, F32,	1876,	"kPa", 1, 0, -100.0, 800.0, 2
	step1RpmWindow					= scalar, S32,	1880,	"rpm", 1, 0, 0, 3000.0, 2
	idleRpmPid_pFactor				= scalar, F32,	1884,	"", 1, 0, -10000, 10000, 7
	idleRpmPid_iFactor				= scalar, F32,	1888,	"", 1, 0, -10000, 10000, 7
	idleRpmPid_dFactor				= scalar, F32,	1892,	"", 1, 0, -10000, 10000, 7
	idleRpmPid_offset				= scalar, S16,	1896,	"", 1, 0, 0, 1000, 0
	idleRpmPid_period				= scalar, S16,	1898,	"ms", 1, 0, 0, 3000, 0
	idleRpmPid_minValue				= scalar, S16,	1900,	"", 1, 0, -3000, 3000.0, 3
	idleRpmPid_maxValue				= scalar, S16,	1902,	"", 1, 0, -3000, 3000.0, 3
	addedToWallCoef					= scalar, F32,	1904,	"%", 1, 0, 0.0, 300.0, 2
	communicationPin			 = bits, U32, 1908, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	runningPin					 = bits, U32, 1912, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	binarySerialTxPin			 = bits, U32, 1916, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	binarySerialRxPin			 = bits, U32, 1920, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	consoleSerialTxPin			 = bits, U32, 1924, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	consoleSerialRxPin			 = bits, U32, 1928, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	knockNoise						= array, F32,	1932,	[8],	"v", 1, 0, 0.0, 10, 2
	knockNoiseRpmBins				= array, F32,	1964,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	throttlePedalUpVoltage			= scalar, F32,	1996,	"voltage", 1, 0, -6, 6, 2
	throttlePedalWOTVoltage			= scalar, F32,	2000,	"voltage", 1, 0, -6, 6, 2
	stepperDirectionPinMode		 = bits, U32, 2004, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	startUpFuelPumpDuration			= scalar, S16,	2008,	"seconds", 1, 0, 0, 6000, 0
	idlePidRpmDeadZone				= scalar, S16,	2010,	"RPM", 1, 0, 0, 1000, 0
	cltIdleRpmBins					= array, F32,	2012,	[16],	"C", 1, 0, -100.0, 250.0, 2
	cltIdleRpm						= array, F32,	2076,	[16],	"", 1, 0, 0.0, 8000.0, 0
	targetVBatt						= scalar, F32,	2140,	"Volts", 1, 0, 0,30, 1
	alternatorOffAboveTps			= scalar, F32,	2144,	"%", 1, 0, 0, 200, 2
	startOfCrankingPrimingPulse		= scalar, F32,	2148,	"ms", 1, 0, 0, 200, 1
	afterCrankingIACtaperDuration		= scalar, S16,	2152,	"cycles", 1, 0, 0, 5000, 0
	iacByTpsTaper					= scalar, S16,	2154,	"percent", 1, 0, 0, 500, 0
	LIS302DLCsPin				 = bits, U32, 2156, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	tpsAccelLength					= scalar, S32,	2160,	"cycles", 1, 0, 1, 200, 0
	tpsAccelEnrichmentThreshold		= scalar, F32,	2164,	"roc", 1, 0, 0, 200, 3
	vvtOffset						= scalar, F32,	2168,	"value", 1, 0, -720, 1000, 1
	engineLoadAccelLength			= scalar, S32,	2172,	"cycles", 1, 0, 1, 200, 0
	engineLoadDecelEnleanmentThreshold		= scalar, F32,	2176,	"roc", 1, 0, 0, 200, 3
	engineLoadDecelEnleanmentMultiplier		= scalar, F32,	2180,	"coeff", 1, 0, 0, 200, 3
	engineLoadAccelEnrichmentThreshold		= scalar, F32,	2184,	"roc", 1, 0, 0, 200, 3
	engineLoadAccelEnrichmentMultiplier		= scalar, F32,	2188,	"coeff", 1, 0, 0, 200, 3
	fatalErrorPin				 = bits, U32, 2192, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	warninigPin					 = bits, U32, 2196, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	configResetPin				 = bits, U32, 2200, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	uartConsoleSerialSpeed			= scalar, U32,	2204,	"BPs", 1, 0, 0,1000000, 0
	tpsDecelEnleanmentThreshold		= scalar, F32,	2208,	"roc", 1, 0, 0, 200, 3
	tpsDecelEnleanmentMultiplier		= scalar, F32,	2212,	"coeff", 1, 0, 0, 200, 3
	slowAdcAlpha					= scalar, F32,	2216,	"coeff", 1, 0, 0, 200, 3
	debugMode					 = bits, U32, 2220, [0:4], "Alternator_PID", "TPS accel enrich", "Warmup PID", "IDLE", "EL accl enrich", "Trigger Counters", "FSIO_ADC", "AUX_PID_1", "VVT PID", "Cranking", "Timing", "Closed-loop fuel corr PID", "VSS", "SD card", "sr5", "Knock", "Trigger Sync", "Electronic Throttle", "Executor", "Bench Test", "Aux Valves", "ADC", "INSTANT_RPM", "FSIO_EXPRESSION", "Status", "CJ125", "CAN", "MAP", "mode28", "mode29"
	auxValves1					 = bits, U32, 2224, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxValves2					 = bits, U32, 2228, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	warmupTargetAfrBins				= array, F32,	2232,	[4],	"C", 1, 0, -100.0, 250.0, 2
	warmupTargetAfr					= array, F32,	2248,	[4],	"AFR", 1, 0, 0.0, 20.0, 2
	warmupAfrThreshold				= scalar, F32,	2264,	"tempterature", 1, 0, 0, 200, 3
	boostCutPressure				= scalar, F32,	2268,	"kPa", 1, 0, 0, 500, 0
	mapAccelTaperBins				= array, F32,	2272,	[8],	"counter", 1, 0, 0.0, 300, 0
	mapAccelTaperMult				= array, F32,	2304,	[8],	"mult", 1, 0, 0.0, 300, 2
	dizzySparkOutputPin			 = bits, U32, 2336, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	dizzySparkOutputPinMode		 = bits, U32, 2340, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	fsioAdc1					 = bits, U32, 2344, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioAdc2					 = bits, U32, 2348, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioAdc3					 = bits, U32, 2352, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fsioAdc4					 = bits, U32, 2356, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fixedTiming						= scalar, F32,	2360,	"deg", 1, 0, -720, 720, 2
	mapLowValueVoltage				= scalar, F32,	2364,	"v", 1, 0, 0.0, 10, 2
	mapHighValueVoltage				= scalar, F32,	2368,	"v", 1, 0, 0.0, 10, 2
	egoValueShift					= scalar, F32,	2372,	"value", 1, 0, -10.0, 10, 2
	camInput					 = bits, U32, 2376, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	crankingIACposition				= scalar, S32,	2380,	"percent", 1, 0, -100.0, 100,
	tChargeMinRpmMinTps				= scalar, F32,	2384,	"mult", 1, 0, 0, 3, 4
	tChargeMinRpmMaxTps				= scalar, F32,	2388,	"mult", 1, 0, 0, 3, 4
	tChargeMaxRpmMinTps				= scalar, F32,	2392,	"mult", 1, 0, 0, 3, 4
	tChargeMaxRpmMaxTps				= scalar, F32,	2396,	"mult", 1, 0, 0, 3, 4
	auxPidPins1					 = bits, U32, 2400, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxPidPins2					 = bits, U32, 2404, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxPidPins3					 = bits, U32, 2408, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxPidPins4					 = bits, U32, 2412, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxPidFrequency1			 = scalar, U16, 2416, "Hz", 1, 0, 0, 3000, 0
	auxPidFrequency2			 = scalar, U16, 2418, "Hz", 1, 0, 0, 3000, 0
	auxPidFrequency3			 = scalar, U16, 2420, "Hz", 1, 0, 0, 3000, 0
	auxPidFrequency4			 = scalar, U16, 2422, "Hz", 1, 0, 0, 3000, 0
	alternatorPwmFrequency			= scalar, S32,	2424,	"Hz", 1, 0, 0, 3000.0, 0
	storageMode					 = bits, U32, 2428, [0:1], "Auto", "Always", "Never"
	cj125SpiDevice				 = bits,U32, 2432, [0:1], "Off", "SPI1", "SPI2", "SPI3"
	cj125CsPinMode				 = bits, U32, 2436, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	narrowToWideOxygenBins			= array, F32,	2440,	[8],	"V", 1, 0, -10.0, 10.0, 3
	narrowToWideOxygen				= array, F32,	2472,	[8],	"ratio", 1, 0, -40.0, 40.0, 2
	vvtMode						 = bits, U32, 2504, [0:2], "First half", "Second half", "2GZ", "Miata NB2", "mode4", "mode5", "mode6", "mode7"
	biQuad_a0						= scalar, F32,	2508,	"v", 1, 0, -1000, 1000, 9
	biQuad_a1						= scalar, F32,	2512,	"v", 1, 0, -1000, 1000, 9
	biQuad_a2						= scalar, F32,	2516,	"v", 1, 0, -1000, 1000, 9
	biQuad_b1						= scalar, F32,	2520,	"v", 1, 0, -1000, 1000, 9
	biQuad_b2						= scalar, F32,	2524,	"v", 1, 0, -1000, 1000, 9
	cltTimingBins					= array, F32,	2528,	[8],	"C", 1, 0, -100.0, 250.0, 1
	cltTimingExtra					= array, F32,	2560,	[8],	"degree", 1, 0, -400.0, 400.0, 0
	nbVvtIndex						= scalar, S32,	2592,	"index", 1, 0, 0, 4.0, 0
;no TS info - skipping autoTuneCltThreshold offset 2596
;no TS info - skipping autoTuneTpsRocThreshold offset 2600
;no TS info - skipping autoTuneTpsQuietPeriod offset 2604
	postCrankingTargetClt			= scalar, F32,	2608,	"C", 1, 0, 0, 100, 0
	postCrankingFactor				= scalar, F32,	2612,	"mult", 1, 0, 0, 100, 4
	postCrankingDurationSec			= scalar, F32,	2616,	"seconds", 1, 0, 0, 100, 2
	auxTempSensor1_tempC_1			= scalar, F32,	2620,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_tempC_2			= scalar, F32,	2624,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_tempC_3			= scalar, F32,	2628,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_resistance_1		= scalar, F32,	2632,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_resistance_2		= scalar, F32,	2636,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_resistance_3		= scalar, F32,	2640,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_bias_resistor		= scalar, F32,	2644,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_adcChannel	 = bits, U32, 2648, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxTempSensor2_tempC_1			= scalar, F32,	2652,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_tempC_2			= scalar, F32,	2656,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_tempC_3			= scalar, F32,	2660,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_resistance_1		= scalar, F32,	2664,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_resistance_2		= scalar, F32,	2668,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_resistance_3		= scalar, F32,	2672,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_bias_resistor		= scalar, F32,	2676,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_adcChannel	 = bits, U32, 2680, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	fuelClosedLoopCltThreshold		= scalar, S16,	2684,	"C", 1, 0, 0, 100, 0
	fuelClosedLoopTpsThreshold		= scalar, S16,	2686,	"%", 1, 0, 0, 100, 0
	fuelClosedLoopRpmThreshold		= scalar, S16,	2688,	"rpm", 1, 0, 0, 5000, 0
	etbFreq							= scalar, S16,	2690,	"Hz", 1, 0, 0, 30000, 0
	fuelClosedLoopPid_pFactor		= scalar, F32,	2692,	"", 1, 0, -10000, 10000, 7
	fuelClosedLoopPid_iFactor		= scalar, F32,	2696,	"", 1, 0, -10000, 10000, 7
	fuelClosedLoopPid_dFactor		= scalar, F32,	2700,	"", 1, 0, -10000, 10000, 7
	fuelClosedLoopPid_offset		= scalar, S16,	2704,	"", 1, 0, 0, 1000, 0
	fuelClosedLoopPid_period		= scalar, S16,	2706,	"ms", 1, 0, 0, 3000, 0
	fuelClosedLoopPid_minValue		= scalar, S16,	2708,	"", 1, 0, -3000, 3000.0, 3
	fuelClosedLoopPid_maxValue		= scalar, S16,	2710,	"", 1, 0, -3000, 3000.0, 3
	fuelClosedLoopAfrHighThreshold		= scalar, F32,	2712,	"ratio", 1, 0, 0, 100, 1
	stepperEnablePinMode		 = bits, U32, 2716, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	cj125ua						 = bits, U32, 2720, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	cj125ur						 = bits, U32, 2724, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	timing_offset_cylinder1		 = scalar, F32, 2728, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder2		 = scalar, F32, 2732, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder3		 = scalar, F32, 2736, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder4		 = scalar, F32, 2740, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder5		 = scalar, F32, 2744, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder6		 = scalar, F32, 2748, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder7		 = scalar, F32, 2752, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder8		 = scalar, F32, 2756, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder9		 = scalar, F32, 2760, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder10	 = scalar, F32, 2764, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder11	 = scalar, F32, 2768, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder12	 = scalar, F32, 2772, "Val", 1, 0, -20000000, 20000000, 1
	brakePedalPinMode			 = scalar, F32, 2776, "ms", 1, 0, 0, 200, 1
	idlePidActivationTime			= scalar, F32,	2780,	"seconds", 1, 0, 0, 60, 1
	sdCardSpiDevice				 = bits,U32, 2784, [0:1], "Off", "SPI1", "SPI2", "SPI3"
	spi3SckMode					 = bits, U32, 2788, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	spi3MosiMode				 = bits, U32, 2792, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	spi3MisoMode				 = bits, U32, 2796, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	spi1SckMode					 = bits, U32, 2800, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	spi1MosiMode				 = bits, U32, 2804, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	spi1MisoMode				 = bits, U32, 2808, [0:5], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "mode12", "mode13", "mode14", "mode15", "mode16", "mode17", "mode18", "mode19", "mode20", "mode21", "mode22", "mode23", "mode24", "mode25", "mode26", "mode27", "mode28", "mode29", "mode30", "mode31", "PULLUP", "mode33", "mode34", "mode35"
	brakePedalPin				 = bits, U32, 2812, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxPid1_pFactor					= scalar, F32,	2816,	"", 1, 0, -10000, 10000, 7
	auxPid1_iFactor					= scalar, F32,	2820,	"", 1, 0, -10000, 10000, 7
	auxPid1_dFactor					= scalar, F32,	2824,	"", 1, 0, -10000, 10000, 7
	auxPid1_offset					= scalar, S16,	2828,	"", 1, 0, 0, 1000, 0
	auxPid1_period					= scalar, S16,	2830,	"ms", 1, 0, 0, 3000, 0
	auxPid1_minValue				= scalar, S16,	2832,	"", 1, 0, -3000, 3000.0, 3
	auxPid1_maxValue				= scalar, S16,	2834,	"", 1, 0, -3000, 3000.0, 3
	auxPid2_pFactor					= scalar, F32,	2836,	"", 1, 0, -10000, 10000, 7
	auxPid2_iFactor					= scalar, F32,	2840,	"", 1, 0, -10000, 10000, 7
	auxPid2_dFactor					= scalar, F32,	2844,	"", 1, 0, -10000, 10000, 7
	auxPid2_offset					= scalar, S16,	2848,	"", 1, 0, 0, 1000, 0
	auxPid2_period					= scalar, S16,	2850,	"ms", 1, 0, 0, 3000, 0
	auxPid2_minValue				= scalar, S16,	2852,	"", 1, 0, -3000, 3000.0, 3
	auxPid2_maxValue				= scalar, S16,	2854,	"", 1, 0, -3000, 3000.0, 3
	auxPid3_pFactor					= scalar, F32,	2856,	"", 1, 0, -10000, 10000, 7
	auxPid3_iFactor					= scalar, F32,	2860,	"", 1, 0, -10000, 10000, 7
	auxPid3_dFactor					= scalar, F32,	2864,	"", 1, 0, -10000, 10000, 7
	auxPid3_offset					= scalar, S16,	2868,	"", 1, 0, 0, 1000, 0
	auxPid3_period					= scalar, S16,	2870,	"ms", 1, 0, 0, 3000, 0
	auxPid3_minValue				= scalar, S16,	2872,	"", 1, 0, -3000, 3000.0, 3
	auxPid3_maxValue				= scalar, S16,	2874,	"", 1, 0, -3000, 3000.0, 3
	auxPid4_pFactor					= scalar, F32,	2876,	"", 1, 0, -10000, 10000, 7
	auxPid4_iFactor					= scalar, F32,	2880,	"", 1, 0, -10000, 10000, 7
	auxPid4_dFactor					= scalar, F32,	2884,	"", 1, 0, -10000, 10000, 7
	auxPid4_offset					= scalar, S16,	2888,	"", 1, 0, 0, 1000, 0
	auxPid4_period					= scalar, S16,	2890,	"ms", 1, 0, 0, 3000, 0
	auxPid4_minValue				= scalar, S16,	2892,	"", 1, 0, -3000, 3000.0, 3
	auxPid4_maxValue				= scalar, S16,	2894,	"", 1, 0, -3000, 3000.0, 3
	oilPressure_hwChannel		 = bits, U32, 2896, [0:4] "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PB0", "PB1", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "Disabled", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	oilPressure_v1					= scalar, F32,	2900,	 "volts", 1, 0.0, 0, 10.0, 2
	oilPressure_value1				= scalar, F32,	2904,	 "kPa", 1, 0.0, 0, 1000.0, 2
	oilPressure_v2					= scalar, F32,	2908,	 "volts", 1, 0.0, 0, 10.0, 2
	oilPressure_value2				= scalar, F32,	2912,	 "kPa", 1, 0.0, 0, 1000.0, 2
	accelerometerSpiDevice		 = bits,U32, 2916, [0:1], "Off", "SPI1", "SPI2", "SPI3"
	fsioCurve1Bins					= array, F32,	2920,	[16],	"x", 1, 0, -999, 1000.0, 3
	fsioCurve1						= array, F32,	2984,	[16],	"y", 1, 0, -999, 1000.0, 3
	fsioCurve2Bins					= array, F32,	3048,	[16],	"x", 1, 0, -999, 1000.0, 3
	fsioCurve2						= array, F32,	3112,	[16],	"y", 1, 0, -999, 1000.0, 3
	fsioCurve3Bins					= array, F32,	3176,	[8],	"x", 1, 0, -999, 1000.0, 3
	fsioCurve3						= array, F32,	3208,	[8],	"y", 1, 0, -999, 1000.0, 3
	fsioCurve4Bins					= array, F32,	3240,	[8],	"x", 1, 0, -999, 1000.0, 3
	fsioCurve4						= array, F32,	3272,	[8],	"y", 1, 0, -999, 1000.0, 3
	flexFuelSensor				 = bits, U32, 3304, [0:6], "INVALID", "PA1", "PA2", "PA3", "INVALID", "PA5", "PA6", "PA7", "PA8", "PA9", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PA15", "INVALID", "INVALID", "INVALID", "PB3", "PB4", "PB5", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PC6", "PC7", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PE5", "PE6", "INVALID", "INVALID", "PE9", "INVALID", "PE11", "INVALID", "INVALID", "INVALID", "INVALID", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	test557pin					 = bits, U32, 3308, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	crankingAdvanceBins				= array, F32,	3312,	[4],	"RPM", 1, 0, 0.0, 18000, 2
	crankingAdvance					= array, F32,	3328,	[4],	"deg", 1, 0, -20, 90, 2
	servoOutputPins1			 = bits, U32, 3344, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	servoOutputPins2			 = bits, U32, 3348, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	servoOutputPins3			 = bits, U32, 3352, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	servoOutputPins4			 = bits, U32, 3356, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	servoOutputPins5			 = bits, U32, 3360, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	servoOutputPins6			 = bits, U32, 3364, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	servoOutputPins7			 = bits, U32, 3368, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	servoOutputPins8			 = bits, U32, 3372, [0:6], "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6", "PE7", "PE8", "PE9", "PE10", "PE11", "PE12", "PE13", "PE14", "PE15", "NONE", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	coastingFuelCutRpmHigh			= scalar, S16,	3376,	"rpm", 1, 0, 0, 5000, 0
	coastingFuelCutRpmLow			= scalar, S16,	3378,	"rpm", 1, 0, 0, 5000, 0
	coastingFuelCutTps				= scalar, S16,	3380,	"%", 1, 0, 0, 100, 0
	coastingFuelCutClt				= scalar, S16,	3382,	"C", 1, 0, -100, 100, 0
	pidExtraForLowRpm				= scalar, S16,	3384,	"%", 1, 0, 0, 100, 0
;no TS info - skipping unusedInt16 offset 3386
	iacCoastingBins					= array, F32,	3388,	[16],	"C", 1, 0, -100.0, 250.0, 2
	iacCoasting						= array, F32,	3452,	[16],	"%", 1, 0, 0.0, 100.0, 2
;no TS info - skipping unusedEnd offset 3516
	cltCrankingCorrBins				= array, F32,	6480,	[8],	"C", 1, 0, -100.0, 250.0, 2
	cltCrankingCorr					= array, F32,	6512,	[8],	"%", 1, 0, 0.0, 500.0, 2
	idleAdvanceBins					= array, F32,	6544,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	idleAdvance						= array, F32,	6576,	[8],	"deg", 1, 0, -20, 90, 2
	idleVeBins						= array, F32,	6608,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	idleVe							= array, F32,	6640,	[8],	,"%", 1, 0, 0, 999.0, 2
	fsioFormulas1				 = string, ASCII, 6672, 200
	fsioFormulas2				 = string, ASCII, 6872, 200
	fsioFormulas3				 = string, ASCII, 7072, 200
	fsioFormulas4				 = string, ASCII, 7272, 200
	fsioFormulas5				 = string, ASCII, 7472, 200
	fsioFormulas6				 = string, ASCII, 7672, 200
	fsioFormulas7				 = string, ASCII, 7872, 200
	fsioFormulas8				 = string, ASCII, 8072, 200
	fsioFormulas9				 = string, ASCII, 8272, 200
	fsioFormulas10				 = string, ASCII, 8472, 200
	fsioFormulas11				 = string, ASCII, 8672, 200
	fsioFormulas12				 = string, ASCII, 8872, 200
	fsioFormulas13				 = string, ASCII, 9072, 200
	fsioFormulas14				 = string, ASCII, 9272, 200
	fsioFormulas15				 = string, ASCII, 9472, 200
	fsioFormulas16				 = string, ASCII, 9672, 200
	timingMultiplier			 = string, ASCII, 9872, 200
	timingAdditive				 = string, ASCII, 10072, 200
	cltFuelCorrBins					= array, F32,	10272,	[16],	"C", 1, 0, -100.0, 250.0, 2
	cltFuelCorr						= array, F32,	10336,	[16],	"%", 1, 0, 0.0, 500.0, 2
	iatFuelCorrBins					= array, F32,	10400,	[16],	"C", 1, 0, -100.0, 250.0, 2
	iatFuelCorr						= array, F32,	10464,	[16],	"%", 1, 0, 0.0, 500.0, 2
	crankingFuelCoef				= array, F32,	10528,	[8],	"%", 1, 0, 0.0, 700.0, 2
	crankingFuelBins				= array, F32,	10560,	[8],	"C", 1, 0, -80.0, 170.0, 2
	crankingCycleCoef				= array, F32,	10592,	[8],	"%", 1, 0, 0.0, 500.0, 2
	crankingCycleBins				= array, F32,	10624,	[8],	"counter", 1, 0, -80.0, 170.0, 2
	cltIdleCorrBins					= array, F32,	10656,	[16],	"C", 1, 0, -100.0, 250.0, 2
	cltIdleCorr						= array, F32,	10720,	[16],	"%", 1, 0, 0.0, 1000.0, 2
	mafDecoding						= array, F32,	10784,	[256],	"kg/hour", 1, 0, -500.0, 4000.0, 2
	mafDecodingBins					= array, F32,	11808,	[256],	 "V", 1, 0, -5.0, 150.0, 2
	ignitionIatCorrTable		 = array, F32, 12832, [16x16],"deg", 1, 0, -720, 720, 2
	ignitionIatCorrLoadBins			= array, F32,	13856,	[16],	"Temperature", 1, 0.0, 0, 500.0, 2
	ignitionIatCorrRpmBins			= array, F32,	13920,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	injectionPhase				 = array, F32, 13984, [16x16],"deg", 1, 0, -720, 720, 2
	injPhaseLoadBins				= array, F32,	15008,	[16],	"Load", 1, 0.0, 0, 500.0, 2
	injPhaseRpmBins					= array, F32,	15072,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	fuelTable					 = array, F32, 15136, [16x16],"ms", 1, 0, 0.0, 500.0, 2
	fuelLoadBins					= array, F32,	16160,	[16],	"V", 1, 0, 0.0, 500.0, 2
	fuelRpmBins						= array, F32,	16224,	[16],	"RPM", 1, 0, 0.0, 25500.0, 2
	ignitionTable				 = array, F32, 16288, [16x16],"deg", 1, 0, -20, 90, 2
	ignitionLoadBins				= array, F32,	17312,	[16],	"Load", 1, 0.0, 0, 500.0, 2
	ignitionRpmBins					= array, F32,	17376,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	veTable						 = array, F32, 17440, [16x16],"%", 1, 0, 0, 999.0, 2
	veLoadBins						= array, F32,	18464,	[16],	"kPa", 1, 0.0, 0, 400.0, 2
	veRpmBins						= array, F32,	18528,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	afrTable					 = array, U08, 18592, [16x16],"deg", 0.1, 0, 0, 25.0, 1
	afrLoadBins						= array, F32,	18848,	[16],	"", 1, 0.0, 0, 500.0, 2
	afrRpmBins						= array, F32,	18912,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	tpsTpsAccelTable			 = array, F32, 18976, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	tpsTpsAccelFromRpmBins			= array, F32,	19232,	[8],	"from", 1, 0, 0.0, 30000.0, 2
	tpsTpsAccelToRpmBins			= array, F32,	19264,	[8],	"to", 1, 0, 0.0, 25500.0, 2
	fsioTable1					 = array, F32, 19296, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	fsioTable1LoadBins				= array, F32,	19552,	[8],	"L", 1, 0, 0.0, 30000.0, 2
	fsioTable1RpmBins				= array, F32,	19584,	[8],	"RPM", 1, 0, 0.0, 25500.0, 2
	fsioTable2					 = array, U08, 19616, [8x8],"value", 1, 0, 0.0, 255.0, 0
	fsioTable2LoadBins				= array, F32,	19680,	[8],	"L", 1, 0, 0.0, 255, 0
	fsioTable2RpmBins				= array, F32,	19712,	[8],	"RPM", 1, 0, 0.0, 25500.0, 2
	fsioTable3					 = array, U08, 19744, [8x8],"value", 1, 0, 0.0, 255.0, 0
	fsioTable3LoadBins				= array, F32,	19808,	[8],	"L", 1, 0, 0.0, 255, 0
	fsioTable3RpmBins				= array, F32,	19840,	[8],	"RPM", 1, 0, 0.0, 25500.0, 2
	fsioTable4					 = array, U08, 19872, [8x8],"value", 1, 0, 0.0, 255.0, 0
	fsioTable4LoadBins				= array, F32,	19936,	[8],	"L", 1, 0, 0.0, 255, 0
	fsioTable4RpmBins				= array, F32,	19968,	[8],	"RPM", 1, 0, 0.0, 25500.0, 2
; total TS size = 20000
[SettingContextHelp]
	injector_flow = "cc/min, cubic centimeter per minute\nBy the way, g/s = 0.125997881 * (lb/hr)\ng/s = 0.125997881 * (cc/min)/10.5\ng/s = 0.0119997981 * cc/min"
	directSelfStimulation = "Should trigger emulator push data right into trigger handling logic, eliminating the need for physical jumper wires?\nPS: Funny name, right? :)"
	cranking_baseFuel = "Fuel squirt duration while cranking\nA number of curves adjust this value according to CLT/IAT/TPS etc"
	cranking_rpm = "Cranking mode threshold. Special cranking logic controls fuel and spark while RPM is below this threshold\nset cranking_rpm X"
	crankingChargeAngle = "While cranking (which causes battery voltage to drop) we can calculate dwell time in shaft\ndegrees, not in absolute time as in running mode.\nset cranking_charge_angle X"
	knockBandCustom = "kHz knock band override"
	cylinderBore = "Cylinder diameter, in mm."
	sensorSnifferRpmThreshold = "Disable sensor sniffer above this rpm"
	fuelAlgorithm = "This setting controls which fuel quantity control algorithm is used.\nset algorithm X"
	injectionMode = "'batched' means two injectors are wired together\nset injection_mode X\nSee also twoWireBatchInjection"
	extraInjectionOffset = "this is about deciding when the injector starts it's squirt\nSee also injectionPhase map\ntodo: do we need even need this since we have the map anyway?"
	crankingTimingAngle = "Timing advance while engine cranking\nset cranking_timing_angle X"
	ignitionMode = "'wasted' means one coil is driving two spark plugs in two cylinders, with one of the aparks not doing anything since it's happening on the exhaust cycle\nset ignition_mode X"
	ignitionOffset = "this value could be used to offset the whole ignition timing table by a constant"
	fixedModeTiming = "This value is used in 'fixed timing' mode, i.e. constant timing\nThis mode is useful for instance while adjusting distributor location"
	globalTriggerAngleOffset = "Angle between Top Dead Center (TDC) and the first trigger event.\nKnowing this angle allows us to control timing and other angles in reference to TDC.\nset global_trigger_offset_angle X"
	analogInputDividerCoefficient = "Coefficient of input voltage dividers on your PCB"
	vbattDividerCoeff = "Battery Voltage input resistor divider coefficient"
	fanOnTemperature = "Cooling fan turn-on temperature threshold, in Celsuis"
	fanOffTemperature = "Cooling fan turn-off temperature threshold, in Celsuis"
	vehicleSpeedCoef = "This coefficient translates vehicle speed input frequency (in Hz) into vehicle speed, km/h"
	trigger_useOnlyFirstChannel = "This option could be used if your second trigger channel is broken"
	tachOutputPin = "This implementation produces one pulse per engine cycle. See also dizzySparkOutputPin."
	vvtCamSensorUseRise = "Use rise or fall signal front"
	measureMapOnlyInOneCylinder = "Useful for individual intakes"
	sensorChartMode = "rusEfi console Sensor Sniffer mode"
	isInjectionEnabled = "enable injection"
	isIgnitionEnabled = "enable ignition"
	isCylinderCleanupEnabled = "If TPS above 95% no fuel would be injected during cranking\nenable cylinder_cleanup"
	isPrintTriggerSynchDetails = "enable trigger_details"
	twoWireBatchInjection = "This is needed if batched injection and individual injector wiring\nenable two_wire_batch_injection"
	useOnlyRisingEdgeForTrigger = "VR sensors are only precise on rising front\nenable trigger_only_front"
	twoWireBatchIgnition = "This is needed if batched igniton (waster spark) and individual coil wiring"
	idlePidRpmUpperLimit = "Relative to the target idle RPM"
	ignMathCalculateAtIndex = "At what trigger index should some ignition-related math be executed? This is a performance trick to reduce load on synchronization trigger callback."
	mapAveragingSchedulingAtIndex = "At what trigger index should some MAP-related math be executed? This is a performance trick to reduce load on synchronization trigger callback."
	tachPulseTriggerIndex = "Trigger cycle index at which we start tach pulse (performance consideration)"
	throttlePedalWOTVoltage = "Pedal in the floor"
	startUpFuelPumpDuration = "on ECU start turn fuel pump on to build fuel pressure"
	slowAdcAlpha = "ExpAverage alpha coefficient"
	dizzySparkOutputPin = "This implementation makes a pulse every time one of the coils is charged, using coil dwell for pulse width. See also tachOutputPin"
	crankingIACposition = "IAC position during cranking"
	pidExtraForLowRpm = "Increases PID reaction for RPM<target by adding extra percent to PID-error"


; CONFIG_DEFINITION_END


[Tuning]
   spotDepth       =   2 ; 0 = no indicators, 1 = Z only, 2 = XYZ indicators.
   cursorDepth     =   2 ; Same as spot depth.

   gaugeColumns = 1 ; Only 1 or 2 are valid.

   pageButtons  = "&EGO"
   gauge1       = RPMGauge	
   gauge2       = afr1Gauge
   gauge3		= MAPGauge
   gauge4		= veValueGauge


[LoggerDefinition]

  ; valid logger types: composite, tooth, trigger, csv
  loggerDef = tooth, "Tooth Logger", tooth
         dataReadCommand = "L"
         dataReadTimeout = 15000 ; time in ms
         dataReadyCondition = { toothLogReady }
         dataLength = 256 ; in bytes, including headers, footers and data

       ; recordDef = headerLen, footerLen, recordLen
       recordDef =   0,   0,   4; in bytes, the recordLen is for each record, currently limited to 4 bytes


       recordField = PA3,               "Inj D",         3,  1, 1,   ""
       recordField = PA2,               "Inj C",         2,  1, 1,   ""
       recordField = PA1,               "Inj B",         1,  1, 1,   ""
       recordField = PA0,               "Inj A",         0,  1, 1,   ""

[VeAnalyze]

        ;    tableName,  lambdaTargetTableName, lambdaChannel, egoCorrectionChannel, activeCondition
#if tuneByMAF
       veAnalyzeMap = fuelTableTbl, afrTableTbl, AFRValue, egoCorrection, { 1 }
#else
       veAnalyzeMap = veTableTbl, afrTableTbl, AFRValue, egoCorrection, { 1 }
#endif
       lambdaTargetTables = afrTableTbl, afrTSCustom

       ; filter =  Name,        "DisplayName", outputChannel, operator, defaultVal, userAdjustable
        filter = minRPMFilter, "Minimum RPM", RPMValue,           <       , 500,      , true

#if CELSIUS          
         filter = minCltFilter, "Minimum CLT", coolant,       <       , 60,       , true
#else
         filter = minCltFilter, "Minimum CLT", coolant,       <       , 160,      , true
#endif

         filter = deltaTps, "dTPS", deltaTps       >       , 50,      , true

		filter = VBatt, "VBatt", VBatt       <       , 12,      , true

         filter = minTps, "Minimum TPS", TPSValue,       <       , 1,       , true


;[VeAnalyze]
;       fuelAnalyzeMap = fuelTableTbl, afrTableTbl, AFRValue, egoCorrection , { 1 }
;        filter = minRPMFilter, "Minimum RPM", RPMValue,           <       , 500,      , true



[OutputChannels]

; see TS_FILE_VERSION in firmware code
fileVersion = { 20171101 }

   ochGetCommand    = "O%2o%2c"

; see TS_OUTPUT_SIZE in console source code
   ochBlockSize     = 356

;
; see TunerStudioOutputChannels struct
;
      RPMValue        = scalar,  U32,      0,             "RPM",            1,   0.00000
#if CELSIUS
      coolant         = scalar,  F32,      4,              "°C",            1,       0.0
#else
      coolant         = scalar,  F32,      4,              "°F",         {9/5},  17.77777
#endif
#if CELSIUS
      intake          = scalar,  F32,      8,              "°C",            1,       0.0
#else
      intake          = scalar,  F32,      8,              "°F",         {9/5},  17.77777
#endif
      TPSValue        = scalar,  F32,     12,               "%",            1,         0
      MAFValue        = scalar,  F32,     16,               "V",            1,         0
      AFRValue       = scalar,  F32,     20,             "AFR",            1,       0.0
      engineLoad      = scalar,	 F32,     24,	    "%",            1,       0.0 ; Blend of MAP and TPS, depends on algorithm
      VBatt	          = scalar,	 F32,     28,	            "V",            1,       0.0
      ; 10 bit TPS ADC value (from 0 to 1023 in 5v scale)
      tpsADC          = scalar,  U16,     32,             "ADC",            1,       0.0;
      alignmet        = scalar,  U16,     34,              "al",            1,       0.0;
      baroPressure    = scalar,  F32,     36,             "pres",           1,       0.0;
      MAPValue        = scalar,  F32,     40,              "MAP",           1,       0.0;
	  ; total fuel squirt duration (in MS) per engine cycle according to current CLT
	  crankingFuel    = scalar,  F32,     44,              "ms",            1,       0.0;
      baseFuel        = scalar,  F32,     48,              "ms",           1,         0
      tCharge         = scalar,  F32,     52,              "T",             1,       0.0;
      ignitionAdvance = scalar,  F32,     56,              "deg",           1,       0.0;
      sparkDwellValue = scalar,  F32,     60,              "ms",           1,       0.0;
      ; actual total Ms time per engine cycle with all corrections
      actualLastInjection      = scalar,  F32,     64,              "ms",           1,       0.0;
      debugFloatField1    = scalar,  F32,  68,            "val",           1,       0.0;
      
      hasSdCard       = bits,    U32,     72, [0:0], "true", "false";
	  isIgnitionEnabledIndicator=bits, U32,     72, [1:1], "true", "false";
	  ind_injection_enabled=bits,U32,     72, [2:2], "true", "false";
	  isCylinderCleanupEnabled=bits, U32, 72, [3:3], "true", "false";
	  isCylinderCleanupActivated=bits,U32,72, [4:4], "true", "false";
	  ind_fuel_pump   = bits,    U32,     72, [5:5], "true", "false";
	  ind_fan         = bits,    U32,     72, [6:6], "true", "false";
	  ind_o2_heater   = bits,    U32,     72, [7:7], "true", "false";
      ind_check_engine= bits,    U32,     72, [8:8], "true", "false";
      needBurn        = bits,    U32,     72, [9:9], "true", "false";
      ind_2nd_trigger_en=bits,   U32,     72, [10:10], "true", "false";
      clutchUpState    =bits,    U32,     72, [11:11], "true", "false";
      clutchDownState  =bits,    U32,     72, [12:12], "true", "false";
      knockEverIndicator=bits,   U32,     72, [13:13], "true", "false";
      knockNowIndicator=bits,    U32,     72, [14:14], "true", "false";
      brakePedalIndicator=bits,  U32,     72, [15:15], "true", "false";
      toothLogReady      =bits,  U32,     72, [16:16], "true", "false";
      vehicleSpeedKph = scalar,  F32,     76,        "kph",   1,       0.0;
      
      ind_tps_error   = bits,    U32,     80, [0:0], "true", "false";
      ind_clt_error   = bits,    U32,     80, [1:1], "true", "false";
      ind_map_error   = bits,    U32,     80, [2:2], "true", "false";
      ind_iat_error   = bits,    U32,     80, [3:3], "true", "false";
      ind_isTriggerError = bits, U32,     80, [5:5], "true", "false";
      ind_hasFatalError=bits,    U32,     80, [6:6], "true", "false";
      ind_isWarnNow    =bits,    U32,     80, [7:7], "true", "false";
      firmwareTsVersion = scalar,U32,     84, "version_p",           1,         0
      egt1            = scalar,  S16,     88, "°C",           1,         0
      egt2            = scalar,  S16,     90, "°C",           1,         0
      egt3            = scalar,  S16,     92, "°C",           1,         0
      egt4            = scalar,  S16,     94, "°C",           1,         0
      egt5            = scalar,  S16,     96, "°C",           1,         0
      egt6            = scalar,  S16,     98, "°C",           1,         0
      egt7            = scalar,  S16,    100, "°C",           1,         0
      egt8            = scalar,  S16,    102, "°C",           1,         0
      rpmAcceleration = scalar,  F32,    104, "dRpm",         1,         0
      massAirFlowValue= scalar,  F32,    108, "Kg/h",         1,         0
      veValue         = scalar,  F32,    112, "ratio",        1,         0
      deltaTps        = scalar,  F32,    116, "ratio",        1,         0
      triggerErrorsCounter = scalar, U32,120, "counter",      1,         0
      engineLoadAccelExtra = scalar,F32, 124, "value",        1,         0
      tpsAccelFuel    = scalar,  F32,    128, "ms",           1,         0
      baroCorrection  = scalar,  F32,    132, "%",            1,         0
      pedalPosition   = scalar,  F32,    136, "%",            1,         0
      injectorDutyCycle= scalar, F32,    140, "%",            1,         0
      knockCount      = scalar,  U32,    144, "counter",      1,         0
      ; fuelLevel 148
      knockLevel      = scalar,  F32,    152, "Volts",        1,         0
      ; totalTriggerErrorCounter 156
      wallFuelAmount = scalar, F32,      160, "ms",           1,         0
      iatCorrection = scalar, F32,       164, "%",            1,         0
      wallFuelCorrection = scalar, F32,  168, "ms",           1,         0
      idleAirValvePosition = scalar, F32,     172, "percent",      1,         0
      currentTargetAfr = scalar, F32,    176, "ratio",      1,         0
      chargeAirMass = scalar, F32,       180, "g",      1,         0
      cltCorrection = scalar, F32,       184, "%",            1,         0
      fuelRunning = scalar, F32,         188, "g",      1,         0
      debugIntField1    = scalar,  U32,  192, "val",          1,       0.0;
      injectorLagMs     = scalar,  F32,  196,            "ms",           1,       0.0;
      debugFloatField2  = scalar,  F32,  200,            "val",           1,       0.0;
      debugFloatField3  = scalar,  F32,  204,            "val",           1,       0.0;
      debugFloatField4  = scalar,  F32,  208,            "val",           1,       0.0;
      debugFloatField5  = scalar,  F32,  212,            "val",           1,       0.0;
      debugIntField2    = scalar,  U32,   216, "val",          1,       0.0;
      debugIntField3    = scalar,  U32,   220, "val",          1,       0.0;
      engineLoadDelta = scalar,F32, 228, "value",            1,         0
      speedToRpmRatio = scalar,F32, 232, "value",            1,         0
      warningCounter = scalar,U32, 236, "count",            1,         0
      lastErrorCode = scalar,U32, 240, "error",            1,         0
      internalMcuTemperature = scalar,F32, 244, "C",            1,         0
      vvtPosition = scalar,F32, 248, "deg",            1,         0
      engineMode    = scalar,  U32,   252, "em",          1,       0.0;
      debugFloatField6  = scalar,  F32,  256,            "val",           1,       0.0;
      debugFloatField7  = scalar,  F32,  260,            "val",           1,       0.0;
      firmwareVersion = scalar,U32,     264, "version_f",           1,         0
      fuelPidCorrection        = scalar,  F32,     268,              "ms",           1,         0
      coilDutyCycle        = scalar,  F32,     272,              "perc",           1,         0
      accelerationX        = scalar,  S16,     276,              "G",           0.01,         0
      accelerationY        = scalar,  S16,     276,              "G",           0.01,         0
	  oilPressure		   = scalar,  F32,     280,				 "kPa",			1, 0.0
      fuelConsumptionPerHour=scalar,  F32,     284,				 "kPa",			1, 0.0
;
; see TunerStudioOutputChannels struct
;

; todo: generate this section programatically
	LM_PLAIN_MAF = {0},
	LM_ALPHA_N = {1},
	LM_MAP = {2},
	LM_SPEED_DENSITY = {3},
	LM_REAL_MAF = {4}

      egoCorrection   = { 100 }
      time            = { timeNow }
;      engineLoad      = { fuleAlgorithm == 0 ? MAF : TPS }

[PcVariables]
    wueAfrTargetOffset = array, S16, [ 16], ":1",   0.1, 0.0, -3.0, 3.0, 1;
    wueAnalRecommend   = array, U08, [ 16], "%",  1.00, 0.0, 100, 255.00, 0

[ConstantsExtensions]
    defaultValue = wueAfrTargetOffset, -1.5 -1.4 -1.15 -0.95 -0.775 -0.65 -0.5625 -0.5 -0.4375 -0.375 -0.3125 -0.25 -0.1875 -0.125 -0.0625 0

[CurveEditor]
;	xAxis       =  leftValue, rightValue, step
;	yAxis       =  bottomValue, topValue, step


	curve = knockThresholdCurve, "Engine knock threshold RPM based"
      columnLabel = "RPM", "Threshold"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  8, 10
      xBins       = knockNoiseRpmBins, RPMValue
      yBins       = knockNoise
      gauge       = RPMGauge

	curve = narrowToWideOxygenCurve, "Narrow to Wideband approximation"
      columnLabel = "Voltage", "AFR"
      xAxis       =  0, 6, 10
      yAxis       =  0,  28, 10
      xBins       = narrowToWideOxygenBins
      yBins       = narrowToWideOxygen
      gauge       = afr1Gauge

   curve = fsioCurve1, "FSIO Curve #1"
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -155,  150, 10
      xBins       = fsioCurve1Bins
      yBins       = fsioCurve1
      
   curve = fsioCurve2, "FSIO Curve #2"
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -150,  150, 10
      xBins       = fsioCurve2Bins
      yBins       = fsioCurve2

   curve = fsioCurve3, "FSIO Curve #3"
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -5,  5, 10
      xBins       = fsioCurve3Bins
      yBins       = fsioCurve3

   curve = fsioCurve4, "FSIO Curve #4"
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -5,  5, 10
      xBins       = fsioCurve4Bins
      yBins       = fsioCurve4

   curve = mapAccelTaper, "Engine Load Acceleration Enrichment Taper"
      columnLabel = "Distance", "Multiplier"
      xAxis       =  0, 128, 10
      yAxis       = -5,  5, 10
      xBins       = mapAccelTaperBins
      yBins       = mapAccelTaperMult

	curve = dwellCorrection, "Dwell time RPM based"
      columnLabel = "RPM", "Dwell"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  30, 10
      xBins       = sparkDwellRpmBins, RPMValue
      yBins       = sparkDwellValues
      gauge       = RPMGauge
    
   curve = map_samplingAngleCurve, "MAP Sampling Start Angle"
      columnLabel = "RPM", "Angle"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  180, 10
      xBins       = map_samplingAngleBins, RPMValue
      yBins       = map_samplingAngle
	  gauge       = MAPGauge
   
   curve = map_samplingWindowCurve, "MAP Sampling Duration"
      columnLabel = "RPM", "Window"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  180, 10
      xBins       = map_samplingWindowBins, RPMValue
      yBins       = map_samplingWindow
	  gauge       = MAPGauge

   curve = injectorsDeadTime, "Injector Dead Time by VBatt"
      columnLabel = "Voltage", "Dead Time"
      xAxis       =  8, 21, 10
      yAxis       = -3,  3, 10
      xBins       = injector_battLagCorrBins, VBatt
      yBins       = injector_battLagCorr
      gauge       = VBattGauge
      
   curve = mafDecodingCurve, "MAF Sensor Settings"
      columnLabel = "Voltage", "kg/hour"
      xAxis       =  -1, 6, 10
      yAxis       = -30,  1300, 10
      xBins       = mafDecodingBins, MAFValue
      yBins       = mafDecoding
      gauge       = MAFGauge

   curve = iatFuelCorrCurve, "Intake air temperature fuel Multiplier"
      columnLabel = "Coolant", "Multiplier"
      xAxis       =  -40, 120, 10
      yAxis       =  0,  5, 10
      xBins       = iatFuelCorrBins, intake
      yBins       = iatFuelCorr
      gauge       = IATGauge
	
	curve = cltTimingCorrCurve, "Warmup timing correction"
      columnLabel = "Coolant", "Extra"
      xAxis       =  -40, 120, 10
      yAxis       =  0,  50, 10
      xBins       = cltTimingBins, coolant
      yBins       = cltTimingExtra
      gauge       = CLTGauge

	curve = cltFuelCorrCurve, "Warmup fuel manual Multiplier"
      columnLabel = "Coolant", "Multiplier"
      xAxis       =  -40, 120, 10
      yAxis       =  0,  50, 10
      xBins       = cltFuelCorrBins, coolant
      yBins       = cltFuelCorr
      gauge       = CLTGauge

	curve = crankingCltCurve, "Cranking Coolant Temperature multiplier"
      columnLabel = "Coolant", "Multiplier"
      xAxis       =  -40, 120, 10
      yAxis       =  0,  5, 10
      xBins       = crankingFuelBins, coolant
      yBins       = crankingFuelCoef
      gauge       = CLTGauge

	curve = crankingTpsCurve, "Cranking TPS Multiplier"
      columnLabel = "TPS", "Multiplier"
      xAxis       =  -40, 120, 10
      yAxis       =  0,  5, 10
      xBins       = crankingTpsBins, TPSValue
      yBins       = crankingTpsCoef
      gauge       = TPSGauge

	curve = crankingDurationCurve, "Cranking Duration Multiplier"
      columnLabel = "Engine Cycle", "Multiplier"
      xAxis       =  0, 1000, 10
      yAxis       =  0,  5, 10
      xBins       = crankingCycleBins
      yBins       = crankingCycleCoef


	curve = cltIdleCurve, "Warmup Idle multiplier"
      columnLabel = "Coolant", "Multiplier"
      xAxis       = -40, 120, 10
      yAxis       =  0,  50, 10
      xBins       = cltIdleCorrBins, coolant
      yBins       = cltIdleCorr
      gauge       = CLTGauge

	curve = iacCoastingCurve, "Coasting IAC Position for Auto-Idle"
      columnLabel = "Coolant", "Multiplier"
      xAxis       = -40, 120, 10
      yAxis       =  0,  100, 10
      xBins       = iacCoastingBins, coolant
      yBins       = iacCoasting
      gauge       = idleAirValvePositionGauge

	curve = cltCrankingCurve, "Cranking IAC multiplier"
      columnLabel = "Coolant", "Multiplier"
      xAxis       = -40, 120, 10
      yAxis       =  0,  50, 10
      xBins       = cltCrankingCorrBins, coolant
      yBins       = cltCrankingCorr
      gauge       = CLTGauge

	curve = cltIdleRPMCurve, "Idle Target RPM"
      columnLabel = "Coolant", "RPM"
      xAxis       = -40, 120, 10
      yAxis       =  0, 8000, 10
      xBins       = cltIdleRpmBins, coolant
      yBins       = cltIdleRpm, RPMValue
      gauge       = CLTGauge

	curve = idleAdvanceCurve, "Idle Advance Angle"
      columnLabel = "RPM", "degrees"
      xAxis       = 0, 8000, 10
      yAxis       = -100, 100, 10
      xBins       = idleAdvanceBins, RPMValue
      yBins       = idleAdvance
      gauge       = RPMGauge

	curve = idleVeCurve, "Idle VE"
      columnLabel = "RPM", "%"
      xAxis       = 0, 8000, 10
      yAxis       = 0, 250, 10
      xBins       = idleVeBins, RPMValue
      yBins       = idleVe
      gauge       = afr1Gauge
    
	curve = crankingAdvanceCurve, "Cranking Advance Angle"
      columnLabel = "RPM", "degrees"
      xAxis       = 0, 8000, 10
      yAxis       = -100, 100, 10
      xBins       = crankingAdvanceBins, RPMValue
      yBins       = crankingAdvance
      gauge       = RPMGauge

	curve = warmupTargetAfrCurve, "CLT-based target AFR"
      columnLabel = "Coolant", "Correction"
      xAxis       = -40, 120, 10
      yAxis       =  0,  50, 10
      xBins       = warmupTargetAfrBins, coolant
      yBins       = warmupTargetAfr
      gauge       = CLTGauge

    curve = wueAfrTargetOffsetCurve, "AFR Target Temperature Adjustment"
      columnLabel = "Coolant", "AFR Offset"
      xAxis       = -40, 200, 9
      yAxis       =   -3,  1, 5
      xBins       = cltFuelCorrBins, coolant
      yBins       = wueAfrTargetOffset
      gauge      = cltGauge

    curve = wueAnalyzer_warmup_curve, "Warmup Enrichment"
      columnLabel = "Coolant", "Current WUE", "Coolant", "Corrected"
      xAxis       = -40, 200, 9
      yAxis       =   90,  500, 6
      xBins       = cltFuelCorrBins, coolant
      yBins       = cltFuelCorr
      yBins       = wueAnalRecommend
      ;gauge       = cltGauge
          
      lineLabel   = "Warmup Correction"
      lineLabel   = "Recommended WUE"

[TableEditor]
   ;       table_id,    map3d_id,    "title",      page

   table = fuelTableMAFTbl,  fuelTableMAFMap,  "Fuel Table",   1
      ;       constant, variable
      xBins       = fuelRpmBins,  RPMValue
      yBins       = fuelLoadBins,  MAFValue
      zBins       = fuelTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

   table = fuelTableTPSTbl,  fuelTableTPSMap,  "Fuel Table",   1
      ;       constant, variable
      xBins       = fuelRpmBins,  RPMValue
      yBins       = fuelLoadBins,  TPSValue
      zBins       = fuelTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

   table = fuelTableELTbl,  fuelTableELMap,  "Fuel Table",   1
      ;       constant, variable
      xBins       = fuelRpmBins,  RPMValue
      yBins       = fuelLoadBins,  engineLoad
      zBins       = fuelTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

; move table into a panel? or find a way to add a link to https://rusefi.com//wiki/index.php?title=Manual:Software:TPSTPS
   table = tpsTpsAccelTbl,  tpsTpsAccelMap,  "TPS/TPS Acceleration Extra Fuel(ms)",   1
      xBins       = tpsTpsAccelFromRpmBins,  TPSValue
      yBins       = tpsTpsAccelToRpmBins,  TPSValue
      zBins       = tpsTpsAccelTable
    
      
   table = fsioTable1Tbl,  fsioTable1Map,  "FSIO Table #1",   1
      xBins       = fsioTable1RpmBins,  RPMValue
      yBins       = fsioTable1LoadBins,  engineLoad
      zBins       = fsioTable1

   table = fsioTable2Tbl,  fsioTable2Map,  "FSIO Table #2",   1
      xBins       = fsioTable2RpmBins,  RPMValue
      yBins       = fsioTable2LoadBins,  engineLoad
      zBins       = fsioTable2

   table = fsioTable3Tbl,  fsioTable3Map,  "FSIO Table #3",   1
      xBins       = fsioTable3RpmBins,  RPMValue
      yBins       = fsioTable3LoadBins,  engineLoad
      zBins       = fsioTable3

   table = fsioTable4Tbl,  fsioTable4Map,  "FSIO Table #4",   1
      xBins       = fsioTable4RpmBins,  RPMValue
      yBins       = fsioTable4LoadBins,  engineLoad
      zBins       = fsioTable4

   table = baroCorrTbl,  baroCorrMap,  "Baro Correction",   1
      ;       constant, variable
      xBins       = baroCorrRpmBins,  RPMValue
      yBins       = baroCorrPressureBins,  baroPressure
      zBins       = baroCorrTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

   table = ignitionTableTbl,  ignitionTableMap,  "Ignition Table",   1
      ;       constant, variable
      xBins       = ignitionRpmBins,  RPMValue
#if   FA_PLAIN_MAF
      yBins       = ignitionLoadBins,  MAFValue
#elif FA_TPS
      yBins       = ignitionLoadBins,  TPSValue
#else
      yBins       = ignitionLoadBins,  engineLoad
#endif

      zBins       = ignitionTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"
	
   table = ignitionIatCorrTableTbl,  ignitionIatCorrTableMap,  "Ignition Intake Air Temp correction",   1
      ;       constant, variable
      xBins       = ignitionIatCorrRpmBins,  RPMValue
      yBins       = ignitionIatCorrLoadBins,  intake
      zBins       = ignitionIatCorrTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

   table = veTableTbl,  veTableMap,  "VE Table",   1
      ;       constant, variable
      xBins       = veRpmBins,  RPMValue
      yBins       = veLoadBins,  MAPValue
      zBins       = veTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"


   table = injPhaseTableTbl,  injPhaseTableMap,  "Injection Phase",   1
      ;       constant, variable
      xBins       = injPhaseRpmBins,  RPMValue
      yBins       = injPhaseLoadBins,  engineLoad
      zBins       = injectionPhase
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(Later)", "(Sooner)"

   table = afrTableTbl,  afrTableMap,  "Target AFR Table",   1
      ;       constant, variable
      xBins       = afrRpmBins,  RPMValue
      yBins       = afrLoadBins,  MAPValue
      zBins       = afrTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

[GaugeConfigurations]

   ;Name               Var            Title                 Units        Lo      Hi      LoD    LoW       HiW   HiD    vd  ld
#if CELSIUS
   tChargeGauge          = tCharge,     "Charge Temp",        "°C",      -40,    140,     -15,      1,      95,   110,   1,   1
#else
   tChargeGauge          = tCharge,     "Charge Temp",        "°F",      -40,    285,       5,     35,     205,   230,  1,   1
#endif


;   warmupEnrichGauge = warmupEnrich, "Warmup Enrichment",    "%",      100,    150,      -1,     -1,     101,   105,   0, 0
;   accelEnrichGauge  = accDecEnrich, "Accel Enrich",         "%",       50,    150,      -1,     -1,     999,   999,   0, 0
   egt1Gauge         = egt1, "EGT#1", "C", 0, 2000
   egt2Gauge         = egt2, "EGT#2", "C", 0, 2000
   egt3Gauge         = egt3, "EGT#3", "C", 0, 2000
   egt4Gauge         = egt4, "EGT#4", "C", 0, 2000
   egt5Gauge         = egt5, "EGT#5", "C", 0, 2000
   egt6Gauge         = egt6, "EGT#6", "C", 0, 2000
   egt7Gauge         = egt7, "EGT#7", "C", 0, 2000
   egt8Gauge         = egt8, "EGT#8", "C", 0, 2000
   rpmAccelerationGa = rpmAcceleration,     "rpm delta",        "dRpm",        0,      3,       0,      1,       3,     4,   1,   1
   massAirFlowValueGa = massAirFlowValue,"Air Flow",       "kg/hr",        0,     50,    -999,   -999,     999,   999,   1,   1
   veValueGauge      = veValue,                 "fuel: VE",            "",        0,    120,      10,     10,     100,   100,   1,   1
   baroCorrectionGauge  = baroCorrection,"BaroCorr",           "%",        0,    120,      10,     10,     100,   100,   1,   1
   knockCountGauge   = knockCount,"Knock count",           "count",        0,    120,      10,     10,     100,   100,   1,   1
   knockLevelGauge   = knockLevel,"Knock level",           "volts",        0,      7,      10,     10,     100,   100,   1,   2
   
   triggerErrorsCounterGauge = triggerErrorsCounter, "trg err", "count",     0,   15000,     0,    0,    6000,  6000,   0,   0
   
   
   idleAirValvePositionGauge = idleAirValvePosition, "idle position", "%",     0,   100,     0,    0,    100,  100,   0,   0

   speedToRpmRatioGauge = speedToRpmRatio, "speed2rpm", "",     0,   100,     0,    0,    100,  100,   4,   4
   warningCounterGauge = warningCounter, "warn", "",     0,   100,     0,    0,    100,  100,   0,   0
   lastErrorCodeGauge = lastErrorCode, "error", "",     0,   8000,     0,    0,    8000,  8000,   0,   0
   
gaugeCategory = Debug  
   debugFloatField1Gauge = debugFloatField1, "debug f1", "%",     0,   100,     0,    0,    100,  100,   4,   4
   debugFloatField2Gauge = debugFloatField2, "debug f2: iTerm", "%",     -100,   100,     0,    0,    100,  100,   4,   4
   debugFloatField3Gauge = debugFloatField3, "debug f3: prevError", "%",     -100,   100,     0,    0,    100,  100,   4,   4
   debugFloatField4Gauge = debugFloatField4, "debug f4: iParam", "%",     0,   100,     0,    0,    100,  100,   4,   4
   debugFloatField5Gauge = debugFloatField5, "debug f5: dParam", "%",     0,   100,     0,    0,    100,  100,   4,   4
   debugFloatField6Gauge = debugFloatField6, "debug f6: dTerm", "%",     -100,   100,     0,    0,    100,  100,   4,   4
   debugFloatField7Gauge = debugFloatField7, "debug f7", "%",     0,   100,     0,    0,    100,  100,   4,   4
   debugIntField1Gauge = debugIntField1, "debug i1: pParam", "%",     0,   100,     0,    0,    100,  100,   0,   0
   debugIntField2Gauge = debugIntField2, "debug i2: offset", "%",     0,   100,     0,    0,    100,  100,   0,   0
   debugIntField3Gauge = debugIntField3, "debug i3", "%",     0,   100,     0,    0,    100,  100,   0,   0
   
gaugeCategory = Sensors  
   RPMGauge        = RPMValue,           "Engine Speed",       "RPM",       0,   15000,     200,    500,    6000,  6000,   0,   0
#if CELSIUS
   CLTGauge          = coolant,       "Coolant Temp",        "°C",      -40,    140,     -15,      1,      95,   110,   1,   1
#else
   CLTGauge          = coolant,       "Coolant Temp",        "°F",      -40,    285,       5,     35,     205,   230,   1,   1
#endif
#if CELSIUS
   IATGauge          = intake,     "Intake Air Temp",        "°C",      -40,    140,     -15,      1,      95,   110,   1,   1
#else
   IATGauge          = intake,     "Intake Air Temp",        "°F",      -40,    285,       5,     35,     205,   230,  1,   1
#endif
   TPSGauge			 = TPSValue,      "Throttle Position",         "%",        0,    100,       0,      0,     100,   100,   2,   2
   afr1Gauge         = AFRValue, "Air:Fuel Ratio 1",          "",       10,   19.4,      12,     13,      15,    16,   2,   2
   MAFGauge			 = MAFValue,          "Mass Air Flow",         "v",        0,      5,       0,      1,       3,     4,   1,   1
   VBattGauge        = VBatt,      "Battery Voltage",         "V",        8,     21,       9,     10,      17,    19,   1,   1
   MAPGauge     	 = MAPValue,               "MAP",       "kPa",        0,    300,      10,     10,     200,   200,   0,   0	
   OilPressGauge   	 = oilPressure,   "Oil Pressure",       "kPa",        0,    750,      35,     75,     550,   700,   0,   0	
   fuelConsumptionPerHourGauge=fuelConsumptionPerHour,  "f","kPa",        0,    750,      35,     75,     550,   700,   0,   0	
   tpsADCGauge       = tpsADC,             "tps ADC",       "ADC",        0,   1024,       0,      0,       0,     0,   0,   0	
   atmPresCGauge     = baroPressure,          "Baro",       "kPa",        0,   1024,       0,      0,       0,     0,   0,   0	
   vvtPositionGauge = vvtPosition, "VVT position", "deg",     0,   100,     0,    0,    720,  720,   0,   0
   internalMcuTemperatureGauge = internalMcuTemperature, "internal temperature", "C",     0,   100,     0,    0,    100,  100,   0,   0
   VSSGauge          = vehicleSpeedKph,     "Speed",         "kmh",        0,    200,       0,      1,       3,     4,   1,   1
   pedalPositionGauge = pedalPosition,"Throttle Pedal Position",        "%",        0,    120,      10,     10,     100,   100,   1,   1
   accelerationXGauge = accelerationX,       "Acceleration: X",      "acc",        -11,   11,     1.0,    1.2,      100,    100,   3, 1
   accelerationYGauge = accelerationY,       "Acceleration: Y",      "acc",        -11,   11,     1.0,    1.2,      100,    100,   3, 1

gaugeCategory = Spark Data  
   ignadvGauge = ignitionAdvance,       "Ignition Advance 1",   "degrees",     -100,    100,    -999,   -999,     999,   999,   1, 1
   dwellGauge        = sparkDwellValue,           "Dwell",      "mSec",        0,     10,     0.5,    1.0,     6.0,   8.0,   1, 1
   coilDutyCycleGauge = coilDutyCycle,       "dwell: coil duty cycle",      "perc",        -11,   11,     1.0,    1.2,      100,    100,   3, 1

gaugeCategory = Accel Data
   engineLoadDeltaGauge = engineLoadDelta,"fuel: load change","value",      0,    120,      10,     10,     100,   100,   1,   1
   engineLoadAccelExtraGauge = engineLoadAccelExtra,"fuel: load extra","value",      0,    120,      10,     10,     100,   100,   1,   1
   deltaTpsGauge     = deltaTps,                "fuel: TPS change",            "",        0,    120,      10,     10,     100,   100,   1,   1
   tpsAccelFuelGauge = tpsAccelFuel,"fuel: TPS enrich",             "ms",        0,    120,      10,     10,     100,   100,   1,   1
   wallFuelAmountGauge = wallFuelAmount, "fuel: wall amount", "ms",     0,   100,     0,    0,    100,  100,   0,   0
   wallFuelCorrectionGauge = wallFuelCorrection, "fuel: wall correction extra", "ms",     0,   100,     0,    0,    100,  100,   0,   0


gaugeCategory = Fuel Data
   crankingFuelGauge = crankingFuel,   "fuel: crank Width",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   iatCorrectionGauge = iatCorrection, "fuel: IAT correction", "mult",     0,   3,     0,    0,    3,  3,   2,   2
   cltCorrectionGauge = cltCorrection, "fuel: CLT correction", "mult",     0,   3,     0,    0,    3,  3,   2,   2
   injectorDutyCycleGauge=injectorDutyCycle, "fuel: injector duty cycle","%",      0,    120,      10,     10,     100,   100,   1,   1
   actualLastInjectionGauge   = actualLastInjection,     "fuel: last injection", "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   
   injectorLagMsGauge = injectorLagMs,       "fuel: injector lag",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   fuelRunningGauge     = fuelRunning,       "fuel: running",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   baseFuelGauge     = baseFuel,       "fuel: base",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   fuelPidCorrectionGauge = fuelPidCorrection,       "fuel: correction",      "mSec",        -11,   11,     1.0,    1.2,      20,    25,   3, 1
   

[WueAnalyze]
    
;                    wueCurveName, afrTempCompensationCurve, lambdaTargetTableName, lambdaChannel, coolantTempChannel, egoCorrectionChannel, wueChannel, activeCondition
     wueAnalyzeMap = wueAnalyzer_warmup_curve, wueAfrTargetOffsetCurve, afrTableTbl, AFRValue, coolant, cltCorrection, egoCorrection

     lambdaTargetTables = afrTableTbl, afrTSCustom

     wuePercentOffset = 0 ; for working with 0 based enrichment set to 100
     option = disableLiveUpdates
     option = burnOnSend

;     filter = std_DeadLambda ; Auto build

     filter = decelFilterMap,"After Start Enrich", engine,         &     , 4 ,       , false
     filter = accelFilterTp, "TP Accel Enrich"   , engine,         &     , 16,       , false
     filter = decelFilterTp, "TP Decel Enrich"   , engine,         &     , 32,       , false
     filter = accelFilterMap,"MAP Accel Enrich"  , engine,         &     , 64,       , false
     filter = decelFilterMap,"MAP Decel Enrich"  , engine,         &     , 128,      , false
     ; this works, just another way to skin a cat
     ;filter = decelFilter, "Decel Flag" , tpsaccden,         >       , 0,        , false
     filter = overrunFilter, "Overrun"    , pulseWidth1,  =       , 0,            , false
     filter = highThrottle, "High Throttle"    , throttle,  >       , 15,         , true
     filter = lowRpm,       "Low RPM"    ,       rpm,       <       , 300,        , false
     filter = std_Custom ; Standard Custom Expression Filter.

   
[FrontPage]
   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4
   ;    5  6  7  8

   ; currently a minimum of 6 gauges must be on the dash, this appears to be an old not needed limitation. next release 1 will work.
   gauge1 = RPMGauge
   gauge2 = CLTGauge
   gauge3 = TPSGauge
   gauge4 = MAFGauge
   gauge5 = afr1Gauge
   gauge6 = VBattGauge
   gauge7 = dwellGauge
   gauge8 = ignadvGauge
   


;         =   expression,            off-label,            on-label,            off-bg, off-fg, on-bg, on-fg
	; important status
    indicator = { ind_hasFatalError }, "",   "FATAL ERROR",   green, black, red,   black
    indicator = { firmwareTsVersion == fileVersion }, "WRONG VERSION",   "version",   red, black, green,   black
    indicator = { ind_isWarnNow }, "",   "warn",   green, black, red,   black
    indicator = { ind_check_engine }, "ok",      "Check engine",       green,  black,  red, black
    indicator = { isIgnitionEnabledIndicator}, "no ignition",   "ignition",   red, black, green,   black
    indicator = { ind_injection_enabled}, "no injection",   "injection",   red, black, green,   black
    indicator = { ind_isTriggerError}, "ok",      "trg err",       green,  black,  red, black
    

	; minor info	
    indicator = { ind_fan}, "no fan",   "fan",   white, black, green,   black
    indicator = { isCylinderCleanupActivated}, "no cyl cleanup",   "cyl cleanup",   white, black, green,   black    
    indicator = { needBurn }, "config ok",  "unsaved changes",   white, black, yellow,   black
    indicator = { hasSdCard}, "no SD",   "with SD",   white, black, green,   black
    indicator = { ind_fuel_pump}, "no pump",   "pump",   white, black, green,   black
    indicator = { clutchUpState }, "clutch",   "cltch Up",   white, black, red,   black
    indicator = { clutchDownState }, "clutch",   "cltch Down",   white, black, red,   black
    indicator = { brakePedalIndicator }, "brake",   "brake down",   white, black, red,   black
    
    ; error codes
    indicator = { ind_tps_error}, "tps",   "tps error",   white, black, red,   black
    indicator = { ind_clt_error}, "clt",   "clt error",   white, black, red,   black
    indicator = { ind_iat_error}, "iat",   "iat error",   white, black, red,   black
    indicator = { ind_map_error}, "map",   "map error",   white, black, red,   black

    indicator = { knockEverIndicator }, "",   "Knock recently",   white, black, red,   black
    indicator = { knockNowIndicator }, "no knock",   "Knock NOW",   white, black, red,   black
   

[Datalog]
   ;       Channel          Label          Type    Format
   entry = time,            "Time",        float,  "%.3f"
   entry = RPMValue,        "RPM",         int,    "%d"
   entry = firmwareVersion, "firmware",     int,    "%d"
   entry = coolant,         "CLT",         float,  "%.2f"
   entry = intake,          "IAT",         float,  "%.2f"
   entry = oilPressure,		"Oil Press",   float,  "%.1f"
   entry = TPSValue,             "TPS",         float,  "%.2f"
   entry = MAFValue,             "MAF",         float,  "%.2f"
   entry = MAPValue,        "MAP",         float,  "%.1f"
   entry = AFRValue,       "Air/Fuel Ratio",         float,  "%.2f"
   entry = VBatt,           "VBatt",       float,  "%.2f"
   entry = engineLoad,	    "Engine Load", 	   float,  "%.1f"
   entry = ignitionAdvance,	"timing",	   float,  "%.2f"
   entry = knockLevel,	    "knock: current level", 	   float,  "%.2f"
   entry = vehicleSpeedKph,	"Vehicle Speed",	   float,  "%.2f"
   entry = speedToRpmRatio, "s2rpm",	   float,  "%.3f"
   entry = rpmAcceleration, "dRPM",        float,  "%.3f"
   entry = massAirFlowValue,"airMass",     float,  "%.3f"
   entry = pedalPosition,   "pedal",       float,  "%.3f"
   entry = triggerErrorsCounter, "trg err",int,    "%d"
   entry = idleAirValvePosition, "Idle Air Valve", float,  "%.3f"


   entry = injectorLagMs,   "fuel: injector lag", float,  "%.3f"
   entry = fuelRunning,     "fuel: running", float,  "%.3f"
   entry = actualLastInjection,     "fuel: last injection", float,  "%.3f"
   entry = baseFuel,	    "fuel: base",  float,  "%.2f"
   entry = fuelPidCorrection,"fuel: pid",  float,  "%.2f"
   entry = veValue,         "fuel: VE",    float,  "%.3f"
   entry = injectorDutyCycle,"fuel: injector duty cycle",float,"%.3f"
   entry = coilDutyCycle,	"dwell: coil duty cycle",	float,"%.3f"
   entry = currentTargetAfr,"fuel: target AFR",	float,"%.3f"

   entry = accelerationX,	"Acceleration: X",	float,"%.2f"
   entry = accelerationY,	"Acceleration: Y",	float,"%.2f"

   entry = engineLoadAccelExtra, "fuel: engine load acceleration extra fuel",float,  "%.3f"
   entry = engineLoadDelta, "fuel: load change",float,  "%.3f"

   entry = deltaTps,		"fuel: TPS change",float,  "%.3f"
   entry = tpsAccelFuel,    "fuel: TPS acceleration extra fuel",    float,  "%.3f"

   entry = wallFuelCorrection,"fuel: wall corr ms",	float,   "%.3f"
   entry = wallFuelAmount, "fuel: wall amount",	float,   "%.3f"
   
   entry = baroCorrection,   "baroCorrection",float,"%.3f"
   entry = iatCorrection,   "fuel: IAT correction",	float,   "%.3f"
   entry = cltCorrection,	"fuel: CLT correction", float,"%.3f"

   entry = sparkDwellValue,	"dwell: coil charge time", float,"%.3f"
   entry = vvtPosition, "VVT postion", float,"%.2f"

; is there a way to log parameter?   entry = debugMode,   "debugMode",int,"%d"
; Alternator_PID: alternator duty cycle
; DBG_TPS_ACCEL: from TPS 
   entry = debugFloatField1,   "debug f1",float,"%.4f"

; Alternator_PID: current integration term
; DBG_TPS_ACCEL: to TPS
   entry = debugFloatField2,   "debug f2: iTerm",float,"%.4f"
   
; Alternator_PID: previous error
; DBG_TPS_ACCEL: tps<>tps table value
   entry = debugFloatField3,   "debug f3: prevError",float,"%.4f"
   
; Alternator_PID: I setting
; DBG_TPS_ACCEL: extra fuel   
   entry = debugFloatField4,   "debug f4: iParam",float,"%.4f"

; Alternator_PID: D setting
   entry = debugFloatField5,   "debug f5: dParam",float,"%.4f"

; Alternator_PID: dTerm
   entry = debugFloatField6,   "debug f6: dTerm",float,"%.4f"
   
   entry = debugFloatField7,   "debug f7",float,"%.4f"


; Alternator_PID: P setting
   entry = debugIntField1,   "debug i1: pParam",int,"%d"

; Alternator_PID: offset setting
   entry = debugIntField2,   "debug i2: offset",int,"%d"
   
; Alternator_PID: PID reset counter   
   entry = debugIntField3,   "debug i3",int,"%d"
   
      
   entry = engineMode,   "Engine Mode",int,"%d"
   entry = warningCounter,   "warning: counter",int,"%d"
   entry = lastErrorCode,   "warning: last",int,"%d"
   entry = internalMcuTemperature,   "CPU Temperature",float,"%.2f"
   
   entry = tCharge, "tCharge",float,"%.3f"
   
   entry = clutchUpState,   "clutch: up",int,"%d"
   entry = clutchDownState,   "clutch: down",int,"%d"
   entry = brakePedalIndicator,   "brake: down",int,"%d"
   entry = ind_fan, "radiator fan",int,"%d"
   
   
;     tpsADC          = U16,    "ADC",
;     alignmet        = U16,    "al",
;     atmPres         = F32,    "pres",
;	  crankingFuel    = F32,    "ms",
;     tCharge         = F32,    "T",
;     sparkDwell      = F32,    "MAP",
;     warmUpEnrich    = F32,    "%",

[Menu]

menuDialog = main
	menu = "&Base &Engine"
		subMenu = engineChars,				"Base Engine Settings"
		subMenu = triggerConfiguration,		"Trigger Configuration"
		subMenu = std_separator
		subMenu = energySystems,			"Battery and Alternator Settings"
		subMenu = std_separator
		subMenu = fanSetting,				"Fan Settings"
		subMenu = malfunction,				"MIL Settings"
		subMenu = etbDialog,				"Electronic Thtottle Body (alpha version)"
		subMenu = std_separator
		subMenu = std_realtime,    			"&Realtime Display",              0	
		
	menu = "Injection"
		subMenu = injectionSettings,		"Injection Settings"
		subMenu = injectionDeadTime,		"Injector Dead Time"
		subMenu = std_separator
		subMenu = fuelTableDialog,			"Fuel Table", 0, {fuelAlgorithm != LM_SPEED_DENSITY}
		subMenu = veTableDialog,			"VE Table", 0, {fuelAlgorithm == LM_SPEED_DENSITY}
		subMenu = afrTableTbl,				"Target AFR Table", 0, {fuelAlgorithm == LM_SPEED_DENSITY}
		subMenu = injPhaseTableTbl,         "Injection Phase Table"
		subMenu = std_separator
		subMenu = warmupFuelDialog,			"Warmup fuel closed-loop"
		subMenu = cltFuelCorrCurve,			"Warmup fuel manual Multiplier", 0, {useWarmupPidAfr == 0}
		subMenu = warmupTargetAfrCurve,		"Warmup fuel auto correction AFR target", 0, {useWarmupPidAfr == 1}
		subMenu = iatFuelCorrCurve,			"Intake air temperature fuel Multiplier"
		subMenu = std_separator
		subMenu = fuelClosedLoopDialog, 	"Fuel short-term closed-loop correction"

	menu = "Ignition"
		subMenu = ignitionSettings,			"Ignition Settings"
		subMenu = dwellSettings,			"Dwell time"
		subMenu = ignitionCylExtra,			"Ignition Cylinder Extra"
		subMenu = std_separator
		subMenu = ignitionTableTbl,			"Ignition Advance Table"
		subMenu = std_separator
		subMenu = cltTimingCorrCurve,		"Warmup timing correction"
		subMenu = ignitionIatCorrTableTbl,	"Ignition IAT correction Table"
		
	menu = "&Cranking"
		subMenu = crankingDialog,           "Cranking Settings"
		subMenu = std_separator
		subMenu = crankingCltCurve,	    	"Cranking Coolant Temp Fuel Multiplier"
		subMenu = crankingDurationCurve,	"Cranking Fuel Duration Multiplier"	
		subMenu = crankingAdvanceCurve,		"Cranking Ignition Advance", 0, {useSeparateAdvanceForCranking == 1}
		subMenu = crankingTpsCurve,	    	"Cranking TPS Multiplier"
		subMenu = std_separator
		subMenu = cltCrankingCurve,			"Cranking IAC multiplier", 0, {overrideCrankingIacSetting == 1}	
		
	menu = "&Idle"
		subMenu = idleSettings,				"Idle Settings"
		subMenu = std_separator	
		subMenu = cltIdleRPMCurve,			"Idle Target RPM", 0, {idleMode == 0}
		subMenu = idleVeCurve,              "Idle VE", 0, {useSeparateVeForIdle == 1}
		subMenu = idleAdvanceCurve,			"Idle Ignition Advance", 0, {useSeparateAdvanceForIdle == 1}
		subMenu = std_separator
		subMenu = cltIdleCurve,				"Warmup Idle multiplier"
		subMenu = iacCoastingCurve,			"Coasting IAC Position for Auto-Idle", 0, {useIacTableForCoasting == 1}

	menu = "&Tuning"
		subMenu = AccelEnrich,				"Accel/Decel Enrichment/Enleanment"
		subMenu = tpsTpsAccelTbl, 			"TPS/TPS Acceleration Extra Fuel Table"
        subMenu = mapAccelTaper,			"Engine Load Acceleration Enrichment Taper"
		subMenu = std_separator
		subMenu = baroCorrTbl,				"Baro Correction Table", 0, {fuelAlgorithm == LM_SPEED_DENSITY}
		subMenu = std_separator
		subMenu = tChargeSettings, "tCharge Settings"
		subMenu = std_separator
		subMenu = smLaunchControl,           "Launch Control"
		subMenu = std_separator
		subMenu = coastingFuelCutControl, 	"Coasting Fuel Cutoff Settings"
		
menuDialog = main
	menu = "&FSIO" 
		subMenu = fsioInputsDialog,        	"FSIO inputs"
		subMenu = auxPidDialog,				"Aux PID"
		subMenu = fsioOutputsDialog,        "FSIO outputs"
		subMenu = fsioTable1Tbl,			"FSIO Table #1"
		subMenu = fsioTable2Tbl,			"FSIO Table #2"
		subMenu = fsioTable3Tbl,			"FSIO Table #3"
		subMenu = fsioTable4Tbl,			"FSIO Table #4"
		subMenu = fsioFormulas,				"FSIO Formulas"
		subMenu = fsioCurve1,			    "FSIO Curve #1"
		subMenu = fsioCurve2,			    "FSIO Curve #2"
		subMenu = fsioCurve3,			    "FSIO Curve #3"
		subMenu = fsioCurve4,			    "FSIO Curve #4"

menuDialog = main
	menu = "&Sensors"
		subMenu = cltSensor,				"CLT Sensor Settings"
		subMenu = iatSensor,				"IAT Sensor Settings"
		subMenu = auxTempSensor1Sensor,		"AuxTemp1 Sensor Settings"
		subMenu = auxTempSensor2Sensor,		"AuxTemp2 Sensor Settings"
		subMenu = std_separator
		subMenu = mapSettings,				"MAP Sensor Settings"
		subMenu = mafDecodingCurve,			"MAF Sensor Settings"
		subMenu = std_separator
		subMenu = egoSettings,				"EGO Sensor Settings"
		subMenu = narrowToWideOxygenCurve,	"Narrow to Wideband approximation"
		subMenu = cj125Function,			"CJ125 Settings (wbo decoder)"
		subMenu = std_separator
		subMenu = hipFunction,				"HIP9011 Settings (knock sensor) (alpha version)"			
		subMenu = speedSensor,				"Vehicle Speed Sensor Settings"
		subMenu = oilPressureSensor,		"Oil Pressure Sensor Settings"			

menuDialog = main
	menu = "&Controller"
		subMenu = sensorInputs,				"Sensor Inputs"
		subMenu = analogInputSettings,		"Analog Input Settings"
		subMenu = egtInputs,				"EGT Inputs"
		subMenu = tachSettings,				"Tachometer output"
		subMenu = idlehw,					"Idle Valve Hardware"
		subMenu	= std_separator
		subMenu = injectorOutputSettings,	"Injector Outputs"
		subMenu = ignitionOutputSettings,	"Ignition Outputs"
		subMenu = deviceOutputSettings,		"Actuator Outputs"
		subMenu	= std_separator
		subMenu = joystickPanel,			"Joystick"
		subMenu = ecuStimulator,			"ECU stimulator"
		subMenu = spiFunction,				"SPI Settings"
		subMenu = monitoringSettings,		"rusEfi Console Settings"
		subMenu	= std_separator
	 	subMenu = connection,            	"Connection"
		subMenu = ioTest,					"I-O Test"
		subMenu = allPins,					"Full pinout"

[ControllerCommands]
; commandName    = command1, command2, commandn...
; command in standard ini format, a command name can be assigned to 1 to n commands that will be executed in order.
;         This does not include any resultant protocol envelope data, only the response data itself.

; WARNING!! These commands bypass TunerStudio's normal memory synchronization. If these commands
; alter mapped settings (Constant) memory in the controller, TunerStudio will have an out of sync condition 
; and may create error messages.
; It is expected that these commands would not typically alter any ram mapped to a Constant.

;
; see TS_IO_TEST_COMMAND in firmware code
;

cmd_test_spk1  = "w\x00\x12\x00\x01"
cmd_test_spk2  = "w\x00\x12\x00\x02"
cmd_test_spk3  = "w\x00\x12\x00\x03"
cmd_test_spk4  = "w\x00\x12\x00\x04"
cmd_test_spk5  = "w\x00\x12\x00\x05"
cmd_test_spk6  = "w\x00\x12\x00\x06"
cmd_test_spk7  = "w\x00\x12\x00\x07"
cmd_test_spk8  = "w\x00\x12\x00\x08"
cmd_test_spk9  = "w\x00\x12\x00\x09"
cmd_test_spk10 = "w\x00\x12\x00\x0a"
cmd_test_spk11 = "w\x00\x12\x00\x0b"
cmd_test_spk12 = "w\x00\x12\x00\x0c"
cmd_test_spk13 = "w\x00\x12\x00\x0d"
cmd_test_spk14 = "w\x00\x12\x00\x0e"
cmd_test_spk15 = "w\x00\x12\x00\x0f"
cmd_test_spk16 = "w\x00\x12\x00\x10"
		
		
cmd_test_inj1  = "w\x00\x13\x00\x01"
cmd_test_inj2  = "w\x00\x13\x00\x02"
cmd_test_inj3  = "w\x00\x13\x00\x03"
cmd_test_inj4  = "w\x00\x13\x00\x04"
cmd_test_inj5  = "w\x00\x13\x00\x05"
cmd_test_inj6  = "w\x00\x13\x00\x06"
cmd_test_inj7  = "w\x00\x13\x00\x07"
cmd_test_inj8  = "w\x00\x13\x00\x08"
cmd_test_inj9  = "w\x00\x13\x00\x09"
cmd_test_inj10 = "w\x00\x13\x00\x0a"
cmd_test_inj11 = "w\x00\x13\x00\x0b"
cmd_test_inj12 = "w\x00\x13\x00\x0c"
cmd_test_inj13 = "w\x00\x13\x00\x0d"
cmd_test_inj14 = "w\x00\x13\x00\x0e"
cmd_test_inj15 = "w\x00\x13\x00\x0f"
cmd_test_inj16 = "w\x00\x13\x00\x10"
		
cmd_test_fuel_pump           = "w\x00\x14\x00\x01"
cmd_test_radiator_fan        = "w\x00\x15\x00\x01"
cmd_test_check_engine_light  = "w\x00\x16\x00\x01"
cmd_test_idle_valve          = "w\x00\x17\x00\x01"
cmd_call_from_pit            = "w\x00\x20\x34\x56"
cmd_stop_engine              = "w\x00\x99\x00\x00"
		
		
[UserDefined]
	dialog = fuelTableBottomDialog, "", card
		panel = fuelTableMAFTbl, Center, {fuelAlgorithm==LM_PLAIN_MAF}
		panel = fuelTableTPSTbl, Center, {fuelAlgorithm==LM_ALPHA_N}
		panel = fuelTableELTbl, Center

	dialog = fuelTableRight, "", yAxis
	 	topicHelp = "http://rusefi.com/fuel"
		displayOnlyField = "Fuel Algorithm",						fuelAlgorithm
		panel = fuelTableBottomDialog, Center
		liveGraph = fuelLive, "Fuel", South
			graphLine = AFRValue
		    graphLine = RPMValue

	dialog = fuelTableGaugesPanel, yAxis
		gauge = TPSGauge
		gauge = MAFGauge
		gauge = MAPGauge

	dialog = fuelTableDialog, "Fuel Table", xAxis
		panel = fuelTableGaugesPanel
		panel = fuelTableRight

	dialog = tChargeSettings, "tCharge Settings"
	    field = "We use these coefficients to approximate air/fuel charge temperate"
	    field = "based on CLT and IAT, depending on RPM and TPM"
		field = "minRPM minTPS", tChargeMinRpmMinTps
		field = "minRPM maxTPS", tChargeMinRpmMaxTps
		field = "maxRPM minTPS", tChargeMaxRpmMinTps
		field = "maxRPM maxTPS", tChargeMaxRpmMaxTps

	dialog = baseInjection, "General"
		field = "Enabled",						isInjectionEnabled
		field = "Mode",							injectionMode, {isInjectionEnabled == 1}
		field = "#Batch injection with individual wiring"
		field = "Two wire batch emulation",				twoWireBatchInjection, {isInjectionEnabled == 1 && injectionMode == 2}

	dialog = ignitionSettings, "Ignition Settings"
		field = "Enabled",						isIgnitionEnabled
		field = "Mode",							ignitionMode, {isIgnitionEnabled == 1}
		field = "#Wasted spark with individual coils"
		field = "Two wire wasted",				twoWireBatchIgnition, {isIgnitionEnabled == 1 && ignitionMode == 2}
		field = "Timing Mode",					timingMode, {isIgnitionEnabled == 1}
		field = "#Use fixed timing while validating with a timing gun"
		field = "Fixed Timinig",				fixedTiming, {isIgnitionEnabled == 1 && timingMode == 1}

	dialog = baseEngineConfig, "Engine Configuration"
;		field = "Engine Preset",						engineType
		field = "Number of Cylinders",					cylindersCount
		field = "Engine Displacement",         			displacement
		field = "debug fields",							debugMode
		field = ""
		field = "Firing Order",							firingOrder

;			Engine->Trigger configuration
	dialog = triggerConfiguration_settings,	"Settings Trigger"
		field = "Trigger type",							trigger_type
		field = "Operation mode",						operationMode
		field = "With VR sensors only rising edge has reliable position"
		field = "use only rising edge",					useOnlyRisingEdgeForTrigger    
	    field = "!Reminder that 4-stroke cycle is 720 degrees"
	    field = "Trigger Angle Offset",         		globalTriggerAngleOffset
		field = "#Custom Trigger"
		field = "total Tooth Count",					trigger_customTotalToothCount, {trigger_type == 0}
		field = "skipped Tooth Count",					trigger_customSkippedToothCount, {trigger_type == 0}

	dialog = triggerConfiguration_IO,	"Settings I/O"
	    field = "VVT mode",								vvtMode, {trigger_type != 80}
	    field = "VVT use rise front",					vvtCamSensorUseRise, {trigger_type != 80}
	    field = "VVT position display offset",			vvtOffset
	    field = "VVT display inverted",					vvtDisplayInverted
	    field = "NB2 from temp",						nb2ratioFrom
	    field = "NB2 to temp",							nb2ratioTo
	    field = "nbVvtIndex",							nbVvtIndex
	    field = "Trigger error LED",					triggerErrorPin
	    field = "Trigger error LED mode",				triggerErrorPinMode
	    field = "print sync details to console",		isPrintTriggerSynchDetails
	    field = "Enable noise filtering",				useNoiselessTriggerDecoder, {trigger_type == 8}
	dialog = triggerConfiguration
		panel = triggerConfiguration_settings,	North
		panel = triggerConfiguration_IO,		South

;			Engine->Injection Settings
	dialog = injChars, "Injector Settings",	yAxis
		field = "Injector Flow",			injector_flow
		field = "!phase offset is usually not needed"
		field = "phase offset",				extraInjectionOffset
		
	dialog = injectorOutputSettings, "Injector Outputs",	yAxis
		field = "!ECU reboot needed to apply these settings"
		field = "injection Pin Mode",       			injectionPinMode
		field = "Injection Pin 1",						injectionPins1
		field = "Injection Pin 2",						injectionPins2, {cylindersCount > 1}
		field = "Injection Pin 3",						injectionPins3, {cylindersCount > 2}
		field = "Injection Pin 4",						injectionPins4, {cylindersCount > 3}
		field = "Injection Pin 5 ",						injectionPins5, {cylindersCount > 4}
		field = "Injection Pin 6 ",						injectionPins6, {cylindersCount > 5}
		field = "Injection Pin 7 ",						injectionPins7, {cylindersCount > 6}
		field = "Injection Pin 8 ",						injectionPins8, {cylindersCount > 7}
		field = "Injection Pin 9 ",						injectionPins9, {cylindersCount > 8}
		field = "Injection Pin 10 ",	    			injectionPins10, {cylindersCount > 9}
		field = "Injection Pin 11 ",					injectionPins11, {cylindersCount > 10}
		field = "Injection Pin 12 ",					injectionPins12, {cylindersCount > 11}	
	
	dialog = injectionSettings,	""
		panel = baseInjection
		panel = injChars
		
	dialog = injectionDeadTime,	"", yAxis
		panel = injectorsDeadTime,		East

	dialog = ignitionCylExtra, "Ignition Cylinder Extra"
		field = "Extra cyl #1",                       timing_offset_cylinder1
		field = "Extra cyl #2",                       timing_offset_cylinder2, {cylindersCount > 1}
		field = "Extra cyl #3",                       timing_offset_cylinder3, {cylindersCount > 2}
		field = "Extra cyl #4",                       timing_offset_cylinder4, {cylindersCount > 3}
		field = "Extra cyl #5",                       timing_offset_cylinder5, {cylindersCount > 4}
		field = "Extra cyl #6",                       timing_offset_cylinder6, {cylindersCount > 5}
		field = "Extra cyl #7",                       timing_offset_cylinder7, {cylindersCount > 6}
		field = "Extra cyl #8",                       timing_offset_cylinder8, {cylindersCount > 7}
		field = "Extra cyl #9",                       timing_offset_cylinder9, {cylindersCount > 8}
		field = "Extra cyl #10",                       timing_offset_cylinder10, {cylindersCount > 9}
		field = "Extra cyl #11",                       timing_offset_cylinder11, {cylindersCount > 10} 
		field = "Extra cyl #12",                       timing_offset_cylinder12, {cylindersCount > 11}


;			Engine->Ignition Settings
	dialog = ignitionOutputs, "Ignition Outputs"
		field = "Ignition Pin Mode",         	        ignitionPinMode
		field = "Ignition Pin 1",                       ignitionPins1 
		field = "Ignition Pin 2",                       ignitionPins2, {(ignitionMode != 0 && cylindersCount > 1) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 2) || (firingOrder == 7) || (firingOrder == 9) || (firingOrder == 11) || (firingOrder == 12)))}
		field = "Ignition Pin 3",                       ignitionPins3, {(ignitionMode != 0 && cylindersCount > 2) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 1) || (firingOrder == 3) || (firingOrder == 4) || (firingOrder == 5) || (firingOrder == 9)))}
		field = "Ignition Pin 4",                       ignitionPins4, {(ignitionMode != 0 && cylindersCount > 3) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 7) || (firingOrder == 12)))}
		field = "Ignition Pin 5",                       ignitionPins5, {(ignitionMode != 0 && cylindersCount > 4) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 4) || (firingOrder == 12)))}
		field = "Ignition Pin 6",                       ignitionPins6, {(ignitionMode != 0 && cylindersCount > 5) && (ignitionMode !=2 || twoWireBatchIgnition == 1 )}
		field = "Ignition Pin 7",                       ignitionPins7, {(ignitionMode != 0 && cylindersCount > 6) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 11)))}
		field = "Ignition Pin 8",                       ignitionPins8, {(ignitionMode != 0 && cylindersCount > 7) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 9",                       ignitionPins9, {(ignitionMode != 0 && cylindersCount > 8) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 10",                      ignitionPins10, {(ignitionMode != 0 && cylindersCount > 9) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 11",                      ignitionPins11, {(ignitionMode != 0 && cylindersCount > 10) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 12",                      ignitionPins12, {(ignitionMode != 0 && cylindersCount > 11) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "This is useful to have tachometer working while converting from distributor"
		field = "Dizzy out Pin",         	    	    dizzySparkOutputPin
		field = "Dizzy out Pin Mode",                   dizzySparkOutputPinMode 
		
	dialog = ignitionOutputSettings, "", xAxis
		panel = ignitionOutputs
	
	dialog = dwellSettings, "", yAxis
		panel = dwellCorrection,	Center
		
;			Sensors->AUX1 Thermistor Sensor Setting
	dialog = auxTempSensor1Sensor,	"aux1 Thermistor Settings"
		field = "#Here is three pairs of thermistor temperature and his resistance."
		field = "#Typical temperatures is -40°C, 0°C and 100°C"
		field = ""
		field = "Lowest temperature",  					auxTempSensor1_tempC_1		
		field = "Resistance @ LT",         	   			auxTempSensor1_resistance_1
		field = ""
		field = "Middle temperature",    		  	    auxTempSensor1_tempC_2
		field = "Resistance @ MT",         	    		auxTempSensor1_resistance_2
		field = ""
		field = "Highest temperature",				 	auxTempSensor1_tempC_3
		field = "Resistance @ HT",         	    		auxTempSensor1_resistance_3

;			Sensors->AUX2 Thermistor Sensor Setting
	dialog = auxTempSensor2Sensor, "aux2 Thermistor Settings"
		field = "#Here is three pairs of thermistor temperature and his resistance."
		field = "#Typical temperatures is -40°C, 0°C and 100°C"
		field = ""
		field = "Lowest temperature",  					auxTempSensor2_tempC_1		
		field = "Resistance @ LT",         	   			auxTempSensor2_resistance_1
		field = ""
		field = "Middle temperature",    		  	    auxTempSensor2_tempC_2
		field = "Resistance @ MT",         	    		auxTempSensor2_resistance_2
		field = ""
		field = "Highest temperature",				 	auxTempSensor2_tempC_3
		field = "Resistance @ HT",         	    		auxTempSensor2_resistance_3
		
;			Sensor Inputs
	dialog = otherSensorInputs,					"Other Sensor Inputs"		
		field = "aux1 TempSensor ADC input",			auxTempSensor1_adcChannel
		field = "aux1 Bias Resistor Value",       		auxTempSensor1_bias_resistor
		field = "aux2 TempSensor ADC input",			auxTempSensor2_adcChannel
		field = "aux2 Bias Resistor Value",    	   		auxTempSensor2_bias_resistor
		field = "Accelerator position sensor", 			pedalPositionChannel
		field = "Oil Pressure ADC input",				oilPressure_hwChannel
		field = "fuelLevelSensor", 						fuelLevelSensor
		field = "Baro ADC input", 						baroSensor_hwChannel
		field = "Flex Fuel",							flexFuelSensor
		field = "Vehicle speed sensor",					vehicleSpeedSensorInputPin
		field = "clutchDownPin",						clutchDownPin
		field = "clutchUpPin",							clutchUpPin
		field = "brakePedalPin",						brakePedalPin
		
	dialog = mainSensorInputs,					"Main Sensor Inputs"
		field = "MAP ADC input", 						map_sensor_hwChannel, {hasFrequencyReportingMapSensor == 0}
		field = "MAP Freq",								frequencyReportingMapInputPin, {hasFrequencyReportingMapSensor == 1}
		field = "MAF ADC input", 						mafAdcChannel
		field = "CLT ADC input", 						clt_adcChannel
		field = "CLT Bias Resistor Value",	    		clt_bias_resistor
		field = "IAT ADC input", 						iat_adcChannel
		field = "IAT Bias Resistor Value",	    		iat_bias_resistor
		field = "AFR ADC input", 						afr_hwChannel
		field = "vBatt ADC input", 						vbattAdcChannel
		field = "Throttle position sensor",				tpsAdcChannel
		
	dialog = triggerInputs,					"Trigger Inputs"
		field = "!ECU reboot needed to apply these settings"
		field = "#Cam is primary if you have cam sensor"
		field = "Primary channel", 						triggerInputPins1
		field = "Invert Primary",						invertPrimaryTriggerSignal
		field = "Secondary channel", 					triggerInputPins2,            { trigger_type != 0 && trigger_type != 8 && trigger_type != 9 && trigger_type != 18 && trigger_type != 20}
		field = "Invert Secondary",						invertSecondaryTriggerSignal, { trigger_type != 0 && trigger_type != 8 && trigger_type != 9 && trigger_type != 18 && trigger_type != 20}
		field = "Cam Sync/VVT input",					camInput
		
	    
	dialog = sensorInputs, "", xAxis
		panel = triggerInputs,		West
		panel = mainSensorInputs,		Center
		panel = otherSensorInputs,		East

	dialog = allPins1
		field = "MAP ADC input", 						map_sensor_hwChannel
		field = "frequencyReportingMapInputPin",		frequencyReportingMapInputPin
		field = "CLT ADC input", 						clt_adcChannel
		field = "IAT ADC input", 						iat_adcChannel
		field = "vBatt ADC input", 						vbattAdcChannel
		field = "TPS ADC input", 						tpsAdcChannel
		field = "MAF ADC input", 						mafAdcChannel
		field = "AFR ADC input", 						afr_hwChannel
		field = "fuelLevelSensor", 						fuelLevelSensor
		field = "Baro ADC input", 						baroSensor_hwChannel
		field = "Throttle pedal Position Channel", 		pedalPositionChannel
		field = "Primary input channel", 				triggerInputPins1
		field = "Secondary channel", 					triggerInputPins2
		field = "Cam Sync/VVT input",					camInput
		field = "Vehicle Speed Input pin",				vehicleSpeedSensorInputPin
		field = "clutchDownPin",						clutchDownPin
		field = "clutchUpPin",							clutchUpPin
		field = "brakePedalPin",						brakePedalPin
		field = "servo#1",								servoOutputPins1
		field = "servo#2",								servoOutputPins2
		field = "servo#3",								servoOutputPins3
		field = "servo#4",								servoOutputPins4
		field = "servo#5",								servoOutputPins5

	dialog = allPins2
		field = "Tachometer output Pin",					tachOutputPin
		field = "Dizzy out Pin",         	    	    dizzySparkOutputPin
		field = "O2 heater pin",						o2heaterPin
		field = "Idle Solenoid Pin",					idle_solenoidPin
		field = "Idle Stepper Dir",						idle_stepperDirectionPin
		field = "Idle Stepper Dir Mode",				stepperDirectionPinMode
		field = "Idle Stepper Step",					idle_stepperStepPin
		field = "Idle Stepper Enable",					stepperEnablePin
		field = "Fuel Pump Pin",						fuelPumpPin
		field = "Fuel Pump Pin Mode",         	        fuelPumpPinMode
		field = "ETB Dir #1",							etbDirectionPin1
		field = "ETB Dir #2",							etbDirectionPin2
		field = "ETB Control #1",						etbControlPin1	
		field = "ETB Control #2",						etbControlPin2	
		field = "SD CS Pin",							sdCardCsPin
		field = "Check Engine Pin",						malfunctionIndicatorPin
		field = "Check Engine Pin Mode",				malfunctionIndicatorPinMode
		field = "Aux Pin #1",							auxPidPins1
		field = "Aux Pin #2",							auxPidPins2
		field = "Aux Pin #3",							auxPidPins3
		field = "Aux Pin #4",							auxPidPins4
		field = "test557pin",							test557pin
		field = "Fan Pin",								fanPin
		field = "Fan Pin Mode",							fanPinMode
		field = "Main Relay Pin",  						mainRelayPin
		field = "Main Relay Mode",			         	mainRelayPinMode

	dialog = allPins3
		field = "Injection Pin 1",						injectionPins1
		field = "Injection Pin 2",						injectionPins2
		field = "Injection Pin 3",						injectionPins3
		field = "Injection Pin 4",						injectionPins4
		field = "Injection Pin 5 ",						injectionPins5
		field = "Injection Pin 6 ",						injectionPins6
		field = "Injection Pin 7 ",						injectionPins7
		field = "Injection Pin 8 ",						injectionPins8
		field = "Injection Pin 9 ",						injectionPins9
		field = "Injection Pin 10 ",	    			injectionPins10
		field = "Injection Pin 11 ",					injectionPins11
		field = "Injection Pin 12 ",					injectionPins12
		
		field = "Ignition Pin 1",                       ignitionPins1 
		field = "Ignition Pin 2",                       ignitionPins2
		field = "Ignition Pin 3",                       ignitionPins3
		field = "Ignition Pin 4",                       ignitionPins4
		field = "Ignition Pin 5",                       ignitionPins5
		field = "Ignition Pin 6",                       ignitionPins6
		field = "Ignition Pin 7",                       ignitionPins7
		field = "Ignition Pin 8",                       ignitionPins8
		field = "Ignition Pin 9",                       ignitionPins9
		field = "Ignition Pin 10",                      ignitionPins10
		field = "Ignition Pin 11",                      ignitionPins11
		field = "Ignition Pin 12",                      ignitionPins12

	dialog = allPins4
		field = "FSIO dig inp #1",						fsioDigitalInputs1
		field = "FSIO dig inp #2",						fsioDigitalInputs2
		field = "FSIO dig inp #3",						fsioDigitalInputs3
		field = "FSIO dig inp #4",						fsioDigitalInputs4
		field = "FSIO dig inp #5",						fsioDigitalInputs5
		field = "FSIO dig inp #6",						fsioDigitalInputs6
		field = "FSIO dig inp #7",						fsioDigitalInputs7
		field = "FSIO dig inp #8",						fsioDigitalInputs8
		field = "FSIO dig inp #9",						fsioDigitalInputs9
		field = "output #1", 							fsioOutputPins1
		field = "output #2", 							fsioOutputPins2
		field = "output #3", 							fsioOutputPins3
		field = "output #4", 							fsioOutputPins4
		field = "output #5", 							fsioOutputPins5
		field = "output #6", 							fsioOutputPins6
		field = "output #7", 							fsioOutputPins7
		field = "output #8", 							fsioOutputPins8
		field = "output #9", 							fsioOutputPins9
		field = "output #10", 							fsioOutputPins10
		field = "output #11", 							fsioOutputPins11
		field = "output #12", 							fsioOutputPins12
		field = "output #13", 							fsioOutputPins13
		field = "output #14", 							fsioOutputPins14
		field = "output #15", 							fsioOutputPins15
		field = "output #16", 							fsioOutputPins16
		field = "aux valve #1", 						auxValves1
		field = "aux valve #2", 						auxValves2



	dialog = allPins1_2, "", xAxis
		panel = allPins1
		panel = allPins2

	dialog = allPins3_4, "", xAxis
		panel = allPins3
		panel = allPins4

	dialog = allPins, "All Pins", xAxis
		panel = allPins1_2
		panel = allPins3_4

;			Sensors->CLT Sensor Settings
	dialog = clt_thermistor, "CLT Sensor Settings"
		field = "#Here is three pairs of thermistor temperature and his resistance."
		field = "#Typical temperatures is -40°C, 0°C and 100°C"
		field = ""
		field = "Lowest temperature",  					clt_tempC_1		
		field = "Resistance @ LT",         	   			clt_resistance_1
		field = ""
		field = "Middle temperature",    		  	    clt_tempC_2
		field = "Resistance @ MT",         	    		clt_resistance_2
		field = ""
		field = "Highest temperature",				 	clt_tempC_3
		field = "Resistance @ HT",         	    		clt_resistance_3
		field = ""
		field = "Linear characteristic",				useLinearCltSensor

	dialog = cltSensor, "", xAxis
		panel = clt_thermistor
		gauge = CLTGauge

;			Sensors->IAT Sensor Settings
	dialog = iat_thermistor, "IAT Sensor Settings"
		field = "#Here is three pairs of thermistor temperature and his resistance."
		field = "#Typical temperatures is -40°C, 0°C and 100°C"
		field = ""
		field = "Lowest temperature",                   iat_tempC_1		
		field = "Resistance @ LT",         	   			iat_resistance_1
		field = ""
		field = "Middle temperature",         	    	iat_tempC_2
		field = "Resistance @ MT",         	    		iat_resistance_2
		field = ""
		field = "Highest temperature",         	    	iat_tempC_3
		field = "Resistance @ HT",         	    		iat_resistance_3
		field = ""
		field = "Linear characteristic",				useLinearIatSensor

	dialog = iatSensor, "", xAxis
		panel = iat_thermistor
		gauge = IATGauge
		
;			Sensors->Oil Pressure Sensor Settings
	dialog = oilp_settings, "Oil Pressure Sensor Settings"
		field = "low voltage",							oilPressure_v1
		field = "low pressure",							oilPressure_value1
		field = "high voltage",							oilPressure_v2
		field = "high pressure",						oilPressure_value2

	dialog = oilPressureSensor, "", xAxis
		panel = oilp_settings
		gauge = OilPressGauge

;			Sensors->MAP Sensor Settings
	dialog = mapSensorVDlg, "Voltage Sensor Settings", yAxis		
		field = "MAP type", map_sensor_type, 			{hasFrequencyReportingMapSensor == 0}
		field = "MAP value low point",  		        map_sensor_lowValue, { map_sensor_type == 0 && hasFrequencyReportingMapSensor == 0}
		field = "MAP voltage low point", 	 		    mapLowValueVoltage, { map_sensor_type == 0 && hasFrequencyReportingMapSensor == 0}
		field = "MAP value high point",               	map_sensor_highValue, { map_sensor_type == 0 && hasFrequencyReportingMapSensor == 0}
		field = "MAP voltage high value",               mapHighValueVoltage, { map_sensor_type == 0 && hasFrequencyReportingMapSensor == 0}
		field = "Use minimal value of",					mapMinBufferLength
		field = "Measure Map Only In One Cylinder",		measureMapOnlyInOneCylinder

	dialog = mapSensorFDlg, "Frequency Sensor Settings", yAxis
		field = "0 kPa freq",		mapFrequency0Kpa, {hasFrequencyReportingMapSensor == 1}
		field = "100 kpa freq",		mapFrequency100Kpa, {hasFrequencyReportingMapSensor == 1}

	dialog = mapSwitch, "MAP input type"
	    field = "frequency-based MAP",				hasFrequencyReportingMapSensor
	    
	dialog = mapSwitchAndSettings, "", yAxis
		panel = mapSwitch
		panel = mapSensorVDlg
		panel = mapSensorFDlg
	
	dialog = mapCurves, "", yAxis
	    panel = map_samplingAngleCurve
		panel = map_samplingWindowCurve
		
	dialog = mapSettings, "", xAxis
		panel = mapCurves
		panel = mapSwitchAndSettings

;			Sensors->EGO Sensor Settings
	dialog = egoSettings_sensor,	"EGO Sensor Settings"
		field = "Type",									afr_type
; todo: only use these values for custom!		
		field = "low voltage", 							afr_v1
		field = "low value", 							afr_value1
		field = "high voltage", 						afr_v2
		field = "high value", 							afr_value2
		field = "Correction",							egoValueShift
	dialog = egoSettings_IO,	"EGO Sensor I/O"
		field = "AFR ADC input", 						afr_hwChannel
		field = "O2 heater pin",						o2heaterPin
	dialog = egoSettings, "", yAxis
		panel = egoSettings_sensor,	North
		panel = egoSettings_IO,		South

;			Engine->EGT inputs
	dialog = egtInputs, "EGT inputs"
		field = "SPI", 									max31855spiDevice
        field = "CS #1", 								max31855_cs1
        field = "CS #2", 								max31855_cs2
        field = "CS #3", 								max31855_cs3
        field = "CS #4", 								max31855_cs4
        field = "CS #5", 								max31855_cs5
        field = "CS #6", 								max31855_cs6
        field = "CS #7", 								max31855_cs7
        field = "CS #8", 								max31855_cs8

;			Engine->idle Settings	
	dialog = idleSolenoid, "Solenoid"
		field = "Idle Solenoid Pin Mode",   	  	    idle_solenoidPinMode, !useStepperIdle
		field = "Idle Solenoid Pin",					idle_solenoidPin, !useStepperIdle
		field = "Idle Solenoid Frequency",   			idle_solenoidFrequency, !useStepperIdle
	
	dialog = idleStepper, "Stepper"
		field = "Idle Stepper Step Pin",				idle_stepperStepPin, useStepperIdle
		field = "Idle Stepper Dir Pin",					idle_stepperDirectionPin, useStepperIdle
		field = "Idle Stepper Enable Pin",				stepperEnablePin, useStepperIdle
		field = "Idle Stepper Enable Pin Mode",			stepperEnablePinMode, useStepperIdle
		field = "Stepper reaction time",				idleStepperReactionTime, useStepperIdle
		field = "Stepper total steps",					idleStepperTotalSteps, useStepperIdle
		field = "Stepper parking extra steps, %",		stepperParkingExtraSteps, useStepperIdle
		field = "Force parking every restart",			stepperForceParkingEveryRestart, useStepperIdle
		
	dialog = idleHwType, "Idle Valve Hardware",	border
		panel = idleSolenoid,				West
		panel = idleStepper,				East
		
	dialog = idlehw, "", yAxis
	field = "!ECU reboot needed to apply these settings"
		field = "Use Stepper",				useStepperIdle
		panel = idleHwType
		
	dialog = idlePidSettings, "PID IAC Control"	
		field = "#See Idle Target RPM Curve"
		field = "P-factor",								idleRpmPid_pFactor
		field = "I-factor",								idleRpmPid_iFactor
		field = "D-factor",								idleRpmPid_dFactor
		field = "Offset",								idleRpmPid_offset
		field = "Min",									idleRpmPid_minValue
		field = "Max",									idleRpmPid_maxValue
		field = "period",								idleRpmPid_period
		field = "RPM dead zone to deactivate IAC pid",	idlePidRpmDeadZone
		field = "RPM upper limit to deactivate IAC pid",idlePidRpmUpperLimit
		field = "PID Extra for low RPM",				pidExtraForLowRpm
		
		
	dialog = idleSettings, "", yAxis
		field = "!Automatic Mode is now Beta Version"
		field = "Idle IAC control mode",					idleMode
		field = "Use separate Ignition Table for idle",	useSeparateAdvanceForIdle
		field = "Use separate VE Table for idle",		useSeparateVeForIdle
		field = "Use separate IAC Table For Coasting",	useIacTableForCoasting, {idleMode == 0}
		field = "TPS deactivation threshold",			idlePidDeactivationTpsThreshold
		panel = idlePidSettings, { idleMode == 0}
		field = "Extra IAC if Throttle Pressed",						iacByTpsTaper;
		field = "verbose",								isVerboseIAC
		field = "#See Warmup idle multiplier"
		slider = "Manual IAC Position",				manIdlePosition, horizontal

;			Engine->Fan Settings
	dialog = fanSetting, "Fan Settings"
		field = "Fan On Temperature",					fanOnTemperature
		field = "Fan Off Temperature",					fanOffTemperature
		
;			Controller->Actuator Outputs
	dialog = deviceOutputSettings, "Actuator Outputs"
		field = "!ECU reboot needed to apply these settings"
		field = "Fan Pin Mode",							fanPinMode
		field = "Fan Pin",								fanPin
		field = "Main Relay Mode",			         	mainRelayPinMode	
		field = "Main Relay Pin",  						mainRelayPin
		field = "Fuel Pump Pin Mode",         	        fuelPumpPinMode
		field = "Fuel Pump Pin",						fuelPumpPin
		field = "Check Engine Pin Mode",				         	malfunctionIndicatorPinMode	
		field = "Check Engine Pin",         						malfunctionIndicatorPin
		
;			Engine->MIL Settings
	dialog = malfunction,	"Check Engine Settings"
		field = "Warning Period",									warningPeriod

;			Engine->hip9011 Settings
	dialog = hipFunction, "HIP9011 Settings (knock decoder)"
		field = "Enabled",								isHip9011Enabled
		field = "Threshold",							knockVThreshold, {isHip9011Enabled == 1}
		field = "!ECU reboot needed to apply these settings"
		field = "IntHold pin (hip9011 input)",      	hip9011IntHoldPin, {isHip9011Enabled == 1}
		field = "IntHold pin (hip9011 input) mode",		hip9011IntHoldPinMode, {isHip9011Enabled == 1}
		field = "ChipSelect pin",						hip9011CsPin, {isHip9011Enabled == 1}
		field = "ChipSelect mode",						hip9011CsPinMode, {isHip9011Enabled == 1}
		field = "hip Output/stm input",					hipOutputChannel, {isHip9011Enabled == 1}
		field = "prescaler & SDO",						hip9011PrescalerAndSDO, {isHip9011Enabled == 1}
		field = "Band Freq override",					knockBandCustom, {isHip9011Enabled == 1}
		field = "SPI device",							hip9011SpiDevice, {isHip9011Enabled == 1}
		field = "SPI1sck",								spi1SckMode, {isHip9011Enabled == 1}
		field = "SPI1mosi",								spi1MosiMode, {isHip9011Enabled == 1}
		field = "SPI1miso",								spi1MisoMode, {isHip9011Enabled == 1}
		field = "SPI2sck",								spi2SckMode, {isHip9011Enabled == 1}
		field = "SPI2mosi",								spi2MosiMode, {isHip9011Enabled == 1}
		field = "SPI2miso",								spi2MisoMode, {isHip9011Enabled == 1}
		field = "SPI3sck",								spi3SckMode, {isHip9011Enabled == 1}
		field = "SPI3mosi",								spi3MosiMode, {isHip9011Enabled == 1}
		field = "SPI3miso",								spi3MisoMode, {isHip9011Enabled == 1}
		panel = knockThresholdCurve
		
;			Engine->cj125 Settings
	dialog = cj125Function, "CJ125 Settings (wbo decoder)"
		field = "Enabled",								isCJ125Enabled
		field = "!ECU reboot needed to apply these settings"
		field = "ChipSelect pin",						cj125CsPin, {isCJ125Enabled == 1}
		field = "ChipSelect mode",						cj125CsPinMode, {isCJ125Enabled == 1}
		field = "SPI device",							cj125SpiDevice
		field = "Heater pin",							wboHeaterPin, {isCJ125Enabled == 1}
		field = "UA input",								cj125ua, {isCJ125Enabled == 1}
		field = "UR input",								cj125ur, {isCJ125Enabled == 1}
		
	dialog = spiFunction, "SPI settings"
		field = "!ECU reboot needed to apply these settings"
		field = "SPI1 enable",							is_enabled_spi_1
		field = "SPI1 MOSI",							spi1mosiPin, {is_enabled_spi_1 == 1}
		field = "SPI1 MISO",							spi1misoPin, {is_enabled_spi_1 == 1}
		field = "SPI1 SCK",								spi1sckPin, {is_enabled_spi_1 == 1}
		field = "SPI2 enable",							is_enabled_spi_2
		field = "SPI2 MOSI",							spi2mosiPin, {is_enabled_spi_2 == 1}
		field = "SPI2 MISO",							spi2misoPin, {is_enabled_spi_2 == 1}
		field = "SPI2 SCK",								spi2sckPin, {is_enabled_spi_2 == 1}
		field = "SPI3 enable",							is_enabled_spi_3
		field = "SPI3 MOSI",							spi3mosiPin, {is_enabled_spi_3 == 1}
		field = "SPI3 MISO",							spi3misoPin, {is_enabled_spi_3 == 1}
		field = "SPI3 SCK",								spi3sckPin, {is_enabled_spi_3 == 1}
		field = "LIS302DLCsPin",						LIS302DLCsPin, {is_enabled_spi_1 == 1}

	dialog = fuelClosedLoopDialog, "Fuel short-term closed-loop correction"
		field = "#This is just the cherry on the cake once you have good VE table"
		field = "Enabled",								fuelClosedLoopCorrectionEnabled
		field = "!No correction below these value"
		field = "CLT - low threshod", 					fuelClosedLoopCltThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "RPM - low threshod", 					fuelClosedLoopRpmThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "EGO - low threshod", 					fuelClosedLoopAfrLowThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "!No correction above these value"
		field = "TPS - high threshod", 					fuelClosedLoopTpsThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "EGO - high threshod", 					fuelClosedLoopAfrHighThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "!PID settings"
		field = "P factor",								fuelClosedLoopPid_pFactor, {fuelClosedLoopCorrectionEnabled == 1}
		field = "I factor",								fuelClosedLoopPid_iFactor, {fuelClosedLoopCorrectionEnabled == 1}
		field = "D factor",								fuelClosedLoopPid_dFactor, {fuelClosedLoopCorrectionEnabled == 1}
		field = "min",									fuelClosedLoopPid_minValue, {fuelClosedLoopCorrectionEnabled == 1}
		field = "max",									fuelClosedLoopPid_maxValue, {fuelClosedLoopCorrectionEnabled == 1}


	dialog = auxPidDialog, "Aux PID"
		field = "Enabled",								activateAuxPid1
		field = "FSIO pin #1",							auxPidPins1
		field = "PWM Frequency",						auxPidFrequency1
		field = "verbose",								isVerboseAuxPid1
		field = "#target based on FSIO map#1"
		field = "control period",						auxPid1_period, {activateAuxPid1 == 1}
		field = "#PID control"
		field = "offset",								auxPid1_offset, {activateAuxPid1 == 1}
		field = "P factor",								auxPid1_pFactor, {activateAuxPid1 == 1}
		field = "I factor",								auxPid1_iFactor, {activateAuxPid1 == 1}
		field = "D factor",								auxPid1_dFactor, {activateAuxPid1 == 1}
		field = "Min",									auxPid1_minValue, {activateAuxPid1 == 1}
		field = "Max",									auxPid1_maxValue, {activateAuxPid1 == 1}
		field = "FSIO pin #2",							auxPidPins2
		field = "FSIO pin #3",							auxPidPins3
		field = "FSIO pin #4",							auxPidPins4

;			Engine->Battery & Alternator
	dialog = batteryDialog, "Battery Settings",	yAxis
		field = "vBatt ADC input", 						vbattAdcChannel
		field = "Battery Input Divider Coefficient",	vbattDividerCoeff
	dialog = alternator, "Alternator Settings",	yAxis
		field = "Enabled",								isAlternatorControlEnabled
		field = "simple on/off mode",					onOffAlternatorLogic, {isAlternatorControlEnabled == 1}
		field = "Target",								targetVBatt, {isAlternatorControlEnabled == 1}
		field = "Pin",									alternatorControlPin, {isAlternatorControlEnabled == 1}
		field = "Pin Mode",								alternatorControlPinMode, {isAlternatorControlEnabled == 1}
		field = "PWM frequency",						alternatorPwmFrequency, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "Off Above TPS",						alternatorOffAboveTps, {isAlternatorControlEnabled == 1}
		field = "Verbose",								isVerboseAlternator, {isAlternatorControlEnabled == 1}
		field = "control period",						alternatorControl_period, {isAlternatorControlEnabled == 1}
		field = "#PID control"
		field = "offset",								alternatorControl_offset, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "P factor",								alternatorControl_pFactor, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "I factor",								alternatorControl_iFactor, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "D factor",								alternatorControl_dFactor, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "Min",									alternatorControl_minValue, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "Max",									alternatorControl_maxValue, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "#% duty = Pterm + Iterm + Dterm + offset%"


	dialog = warmupFuelDialog, "Warmup fuel closed-loop",	yAxis
		field = "use automatic Pid Afr control",			useWarmupPidAfr
		field = "warmup temperature Threshold",				warmupAfrThreshold
		field = "wa offset",								warmupAfrPid_offset
		field = "wa P factor",								warmupAfrPid_pFactor
		field = "wa I factor",								warmupAfrPid_iFactor
		field = "wa D factor",								warmupAfrPid_dFactor
		field = "#correction = Pterm + Iterm + Dterm + offset"
		
		
	dialog = energySystems, "Battery and Alternator Settings",	yAxis
		panel = batteryDialog
		panel = alternator

;			Sensors->Vehicle Speed Sensor Setting
	dialog = speedSensor, "Speed Sensor Settings", xAxis
		field = "revolution to speed mult",				vehicleSpeedCoef
		gauge = VSSGauge

;			Engine->Other inputs	
	dialog = analogInputSettings, "Analog Input Settings"
		field = "!ECU reboot needed to apply these settings"
		field = "TPS low value detection threshold",	tpsErrorDetectionTooLow
		field = "TPS high value detection threshold",	tpsErrorDetectionTooHigh
		field = "!todo: move MAF channel to maf curve dialog"
		field = "Use fixed baro corr from MAP", 		useFixedBaroCorrFromMap
		field = "Analog divider",						analogInputDividerCoefficient
		field = "Use BiQuad averaging",					useBiQuadAnalogFiltering		
		field = "Smoothing factor",						slowAdcAlpha, {useBiQuadAnalogFiltering == 0}
		field = "Bi_Q a0",								biQuad_a0, {useBiQuadAnalogFiltering == 1}
		field = "Bi_Q a1",								biQuad_a1, {useBiQuadAnalogFiltering == 1}
		field = "Bi_Q a2",								biQuad_a2, {useBiQuadAnalogFiltering == 1}
		field = "Bi_Q b1",								biQuad_b1, {useBiQuadAnalogFiltering == 1}
		field = "Bi_Q b2",								biQuad_b2, {useBiQuadAnalogFiltering == 1}

	dialog = tachSettings, "Tachometer output"
		field = "!See also dizzySparkOutputPin"
		field = "pin",									tachOutputPin
		field = "pin mode",								tachOutputPinMode
		field = "rise at trigger index",				tachPulseTriggerIndex
		field = "pulse duration is duty cycle",			tachPulseDurationAsDutyCycle
		field = "pulse duration",						tachPulseDuractionMs


;			Board->Connection
	dialog = tsPort, "TunerStudio Port"
		field = "tunerStudioSerialSpeed",				tunerStudioSerialSpeed
		field = "Use PC10/PC11 serial?",				useSerialPort
		field = "startConsoleInBinaryMode", 			startConsoleInBinaryMode
		field = "uartConsoleSerialSpeed",				uartConsoleSerialSpeed
		
	dialog = canBus, "CAN Bus"
		field = "Can Read Enabled",						canReadEnabled
		field = "Can Write Enabled",					canWriteEnabled
;		field = "Can Nbc Type",							canNbcType
		field = "Can Sleep Period",						canSleepPeriod
		field = "TX pin",								canTxPin
		field = "RX pin",								canRxPin
	
	dialog = sdCard, "SD Card Logger"
		field = "SdCard", 								isSdCardEnabled
		field = "CS Pin",								sdCardCsPin
		field = "SPI",									sdCardSpiDevice
		field = "log format",							logFormat
		field = "Mass Storage",							storageMode
	
	dialog = gpsReceiver, "GPS Receiver"
		field = "gps RX", 								gps_rx_pin
		field = "gps TX", 								gps_tx_pin
		
	dialog = lcdScreen, "LCD screen"
		field = "display Mode",							displayMode
		field = "height", 								HD44780height
		field = "width", 								HD44780width
		field = "RS pin", 								HD44780_rs
		field = "E pin", 								HD44780_e
		field = "D4 pin", 								HD44780_db4
		field = "D5 pin", 								HD44780_db5
		field = "D6 pin", 								HD44780_db6
		field = "D7 pin", 								HD44780_db7
		
	dialog = connectRight, "", 	yAxis
		panel = tsPort
		panel = canBus
		panel = sdCard
		panel = gpsReceiver
		field = "stm32 voltage",						adcVcc
	
	dialog = connection, "", 	border
		panel = lcdScreen,		East
		panel = connectRight,	West

	dialog = joystickPanel, "Joystick"
		field = "joustick center button",				joystickCenterPin
		field = "joustick button A",					joystickAPin
		field = "joustick button B",					joystickBPin
		field = "joustick button C",					joystickCPin
		field = "joustick button D",					joystickDPin
				
	dialog = monitoringSettings, "rusEfi Console Settings"			
		field = "Sensor Sniffer",         	    		sensorChartMode
		field = "  Threshold",							sensorSnifferRpmThreshold
		field = "  Each X cycle",						sensorChartFrequency
		field = "Engine Sniffer", 						isEngineChartEnabled			
		field = "  Threshold", 							engineSnifferRpmThreshold
		
	dialog = generalSettings, "General"
		field = "http://rusefi.com/support"
		field = "RPM Hard Limit",         	    		rpmHardLimit
		field = "Boost Cut Pressure",					boostCutPressure
		field = ""
		field = "http://rusefi.com/fuel"
		field = "Fuel Algorithm",						fuelAlgorithm
		field = ""
		field = "#System hack's"
		field = "Global fuel correction", 				globalFuelCorrection
		field = "Ignition Math Logic @",				ignMathCalculateAtIndex
		field = "MAP Averaging Logic @",				mapAveragingSchedulingAtIndex
		field = "comm status pin",						communicationPin
		field = "running status",						runningPin
		
;			Engine->Base Engine Settings
	dialog = engineChars, "Base Engine Settings"
		panel = baseEngineConfig
		panel = generalSettings

	dialog = crankingFuel, "Fuel"
		field = "Injection Mode",						crankingInjectionMode
		field = "Base Fuel Pulse Width", 				cranking_baseFuel
		
	dialog = crankingIAC, "IAC"
		field = "Cranking IAC position",					crankingIACposition
		field = "After cranking IAC taper duration",	afterCrankingIACtaperDuration
		field = "Override IAC Multiplier for Cranking",	overrideCrankingIacSetting	
		
	dialog = crankingIgnition, "Ignition"
		field = "Advance", 								crankingTimingAngle, {useSeparateAdvanceForCranking == 0}
		field = "Use separate Advance Table for cranking",	useSeparateAdvanceForCranking
		field = "Use Advance Corrections for cranking",	useAdvanceCorrectionsForCranking
        field = "Use fixed Dwell?",         			useConstantDwellDuringCranking
        field = "Fixed Dwell",           			ignitionDwellForCrankingMs, {useConstantDwellDuringCranking == 1}
		field = "Charge Angle", 						crankingChargeAngle, {useConstantDwellDuringCranking == 0}
	
		dialog = postCrankingEnrichment, "Post-cranking short-time fuel enrichment"
		field = "Target temperature", 			postCrankingTargetClt
		field = "Post-Cranking factor", 				postCrankingFactor
		field = "Duraction", 				postCrankingDurationSec
		
	dialog = primingFuelPulsePanel, "Priming fuel pulse"
		field = "Duration at -40C degrees",	startOfCrankingPrimingPulse
		field = "Falloff temperature", primeInjFalloffTemperature
		
		
;			Cranking->Cranking Settings
	dialog = crankingDialog, "Cranking Settings"
		field = "Cranking RPM limit",                	cranking_rpm
		panel = crankingIgnition
		panel = crankingIAC
		panel = crankingFuel
		panel = primingFuelPulsePanel
		panel = postCrankingEnrichment
		field = "enable Cylinder Cleanup",				isCylinderCleanupEnabled
		field = "Startup fuel pump prime",				startUpFuelPumpDuration
		field = ""
		field = "Enable faster engine spin-up",			isFasterEngineSpinUpEnabled
		
		
	dialog = EngineLoadAccelPanel, "Engine Load (alpha version)"
		field = "Length",						engineLoadAccelLength
		field = "Accel Threshold", 				engineLoadAccelEnrichmentThreshold
		field = "Accel Multiplier",	 			engineLoadAccelEnrichmentMultiplier
		field = "Decel Threshold", 				engineLoadDecelEnleanmentThreshold
		field = "Decel Multiplier",	 			engineLoadDecelEnleanmentMultiplier

	dialog = TpsAccelPanel, "TPS"
   		field = "Length",						tpsAccelLength
		field = "Accel Threshold", 				tpsAccelEnrichmentThreshold
		field = "Decel Threshold", 				tpsDecelEnleanmentThreshold
;		field = "Decel Multiplier",	 			tpsDecelEnleanmentMultiplier
		
	dialog = WallWettingAccelPanel, "Wall Wetting (alpha version)"
		field = "sucked off wall coefficient",          suckedOffCoef
		field = "added to wall coef",                   addedToWallCoef
	
		
;			Tuning->AccelEnrichment
	dialog = AccelEnrich,	"Accel/Decel Enrichment"
		panel = TpsAccelPanel
		panel = WallWettingAccelPanel
		panel = EngineLoadAccelPanel
		field = "No accel after RPM hard limit",		noAccelAfterHardLimitPeriodSecs
		
		
;			Flex Logic
	dialog = fsioIO, "Outputs"
		field = "output #1", 							fsioOutputPins1
		field = "output #2", 							fsioOutputPins2
		field = "output #3", 							fsioOutputPins3
		field = "output #4", 							fsioOutputPins4
		field = "output #5", 							fsioOutputPins5
		field = "output #6", 							fsioOutputPins6
		field = "output #7", 							fsioOutputPins7
		field = "output #8", 							fsioOutputPins8
		field = "output #9", 							fsioOutputPins9
		field = "output #10", 							fsioOutputPins10
		field = "output #11", 							fsioOutputPins11
		field = "output #12", 							fsioOutputPins12
		field = "output #13", 							fsioOutputPins13
		field = "output #14", 							fsioOutputPins14
		field = "output #15", 							fsioOutputPins15
		field = "output #16", 							fsioOutputPins16
		field = "aux valve #1", 						auxValves1
		field = "aux valve #2", 						auxValves2
		field = ""
		field = ""
		
	dialog = fsioFrequency, "Frequency"
		field = "freq #1", 								fsioFrequency1
		field = "freq #2", 								fsioFrequency2
		field = "freq #3", 								fsioFrequency3
		field = "freq #4", 								fsioFrequency4
		field = "freq #5", 								fsioFrequency5
		field = "freq #6", 								fsioFrequency6
		field = "freq #7", 								fsioFrequency7
		field = "freq #8", 								fsioFrequency8
		field = "freq #9", 								fsioFrequency9
		field = "freq #10", 							fsioFrequency10
		field = "freq #11", 							fsioFrequency11
		field = "freq #12", 							fsioFrequency12
		field = "freq #13", 							fsioFrequency13
		field = "freq #14", 							fsioFrequency14
		field = "freq #15", 							fsioFrequency15
		field = "freq #16", 							fsioFrequency16
		field = ""
		field = ""
	
	dialog = fsioSetting, "Setting"
		field = "Set number is not associated with the output number."
		field = "Set number, only the cell number with some numbers."
		field = "set #1",								fsio_setting1
		field = "set #2",								fsio_setting2
		field = "set #3",								fsio_setting3
		field = "set #4",								fsio_setting4
		field = "set #5",								fsio_setting5
		field = "set #6",								fsio_setting6
		field = "set #7",								fsio_setting7
		field = "set #8",								fsio_setting8
		field = "set #9",								fsio_setting9
		field = "set #10",								fsio_setting10
		field = "set #11",								fsio_setting11
		field = "set #12",								fsio_setting12
		field = "set #13",								fsio_setting13
		field = "set #14",								fsio_setting14
		field = "set #15",								fsio_setting15
		field = "set #16",								fsio_setting16
		
	dialog = fsioOutputsDialog, "FSIO outputs", border
		panel = fsioIO,			West
		panel = fsioFrequency,	Center
		panel = fsioSetting,	East
		
	dialog = fsioFormulas, "FSIO Formulas"
		field = "#1",									fsioFormulas1
		field = "#2",									fsioFormulas2
		field = "#3",									fsioFormulas3
		field = "#4",									fsioFormulas4
		field = "#5",									fsioFormulas5
		field = "#6",									fsioFormulas6
		field = "#7",									fsioFormulas7
		field = "use FSIO #8 for servo #1",	useFSIO8ForServo1
		field = "#8",									fsioFormulas8
		field = "use FSIO #9 for servo #2",	useFSIO8ForServo1
		field = "#9",									fsioFormulas9
		field = "use FSIO #10 for servo #3",	useFSIO8ForServo1
		field = "#10",									fsioFormulas10
		field = "use FSIO #11 for servo #4",	useFSIO8ForServo1
		field = "#11",									fsioFormulas11
		field = "use FSIO #12 for servo #5",	useFSIO8ForServo1
		field = "#12",									fsioFormulas12
		field = "#13",									fsioFormulas13
		field = "#14",									fsioFormulas14
		field = "#15",									fsioFormulas15
		field = "use FSIO #16 for timing adjustment",	useFSIO16ForTimingAdjustment
		field = "#16",									fsioFormulas16
		
	dialog = fsioInputsDialog, "FSIO inputs"
		field = "ADC #1",								fsioAdc1
		field = "ADC #2",								fsioAdc2
		field = "ADC #3",								fsioAdc3
		field = "ADC #4",								fsioAdc4
				
	help = veTableDialogHelp, "Volumetric Efficiency"
        text = "Volumetric Efficiency is used to calculate fuel in Speed Density mode"
        webHelp = "http://rusefi.com/fuel"
				
	dialog = veTableDialog
		topicHelp = "veTableDialogHelp"
		panel = veTableTbl, South
				
	dialog = veTableDialog3D, "VE Table"
		topicHelp = "veTableDialogHelp"
		panel = veTableMap, South
				
	dialog = etbDialog, "Electronic Thtottle Body (alpha)"			
		field = "verbose",								isVerboseETB
		field = "Throttle Pedal Up",					throttlePedalUpVoltage
		field = "Throttle Pedal Wide Open",				throttlePedalWOTVoltage
		field = "PWM Frequency",						etbFreq, {pedalPositionChannel != 16}
		field = "Dir #1",								etbDirectionPin1, {pedalPositionChannel != 16}
		field = "Dir #2",								etbDirectionPin2, {pedalPositionChannel != 16}
		field = "Control #1",							etbControlPin1, {pedalPositionChannel != 16}
		field = "Control #2",							etbControlPin2, {pedalPositionChannel != 16}
		field = "pFactor",								etb_pFactor, {pedalPositionChannel != 16}
		field = "iFactor",								etb_iFactor, {pedalPositionChannel != 16}
		field = "dFactor",								etb_dFactor, {pedalPositionChannel != 16}	
		field = "offset",								etb_offset, {pedalPositionChannel != 16}
		field = "control period",						etb_period, {pedalPositionChannel != 16}
		field = "pid min",								etb_minValue, {pedalPositionChannel != 16}	
		field = "pid max",								etb_maxValue, {pedalPositionChannel != 16}	
				
	dialog = testSpark, "Spark"
		commandButton = "Spark #1", cmd_test_spk1
		commandButton = "Spark #2", cmd_test_spk2
		commandButton = "Spark #3", cmd_test_spk3
		commandButton = "Spark #4", cmd_test_spk4
		commandButton = "Spark #5", cmd_test_spk5
		commandButton = "Spark #6", cmd_test_spk6
		commandButton = "Spark #7", cmd_test_spk7
		commandButton = "Spark #8", cmd_test_spk8
		
	dialog = testInjectors, "Fuel"
		commandButton = "Injector #1", cmd_test_inj1
		commandButton = "Injector #2", cmd_test_inj2
		commandButton = "Injector #3", cmd_test_inj3
		commandButton = "Injector #4", cmd_test_inj4
		commandButton = "Injector #5", cmd_test_inj5
		commandButton = "Injector #6", cmd_test_inj6
		commandButton = "Injector #7", cmd_test_inj7
		commandButton = "Injector #8", cmd_test_inj8
		
	dialog = testMisc, "Misc"
		commandButton = "Come To Pit", cmd_call_from_pit
		commandButton = "Fuel Pump", cmd_test_fuel_pump
		commandButton = "Radiator Fan", cmd_test_radiator_fan
		commandButton = "Check Engine", cmd_test_check_engine_light
		commandButton = "Idle Air Valve", cmd_test_idle_valve          
		commandButton = "Stop Engine", cmd_stop_engine          
		
	; bench test	
	dialog = ioTest, "I-O Test", border
		panel = testSpark,		West
		panel = testInjectors,	Center
		panel = testMisc,		East


;			Board->ECU stimulator
	dialog = ecuStimulator, "ECU stimulator"
		field = "Trigger Simulator",   					triggerSimulatorFrequency
		field = "self-stimulation",						directSelfStimulation
		field = ""
		field = "digipot spi", 							digitalPotentiometerSpiDevice
		field = "digipot CS #0", 						digitalPotentiometerChipSelect1
		field = "digipot CS #1", 						digitalPotentiometerChipSelect2
		field = "digipot CS #2", 						digitalPotentiometerChipSelect3
		field = "digipot CS #3", 						digitalPotentiometerChipSelect4
		field = ""
		field = "trigger stimulator pin #1", 			triggerSimulatorPins1
		field = "trigger stimulator pin #2", 			triggerSimulatorPins2
		field = "trigger stimulator pin #3", 			triggerSimulatorPins3
		field = ""
	    field = "Logic input channel 1", 				logicAnalyzerPins1
	    field = "Logic input channel 2", 				logicAnalyzerPins2
	    field = "Logic input channel 3", 				logicAnalyzerPins3
	    field = "Logic input channel 4", 				logicAnalyzerPins4
		field = ""
	    field = "Engine chart size", 					engineChartSize

				;			Racing Features->Launch Control
	dialog = smLaunchControl, "Launch Control Settings NOT WORKING"
		field = "RPM Step1 Limit",         	    		step1rpm
		field = "Launch RPM Window"                     step1RpmWindow
		field = "Step1 Ignition Advance",				step1timing
		field = "Use Spark Cut",						step1SparkCutEnable
		field = "Use Fuel Cut",							step1fuelCutEnable
		field = "clutchDownPin",						clutchDownPin
		field = "clutchUpPin",							clutchUpPin
		field = "brakePedalPin",						brakePedalPin
	    
	dialog = coastingFuelCutControl, "Coasting Fuel Cutoff Settings"
		field = "Enable Coasting Fuel Cutoff",			coastingFuelCutEnabled
		field = "Cutoff Activation RPM High Limit",		coastingFuelCutRpmHigh, {coastingFuelCutEnabled == 1}
		field = "Cutoff Deactivation RPM Low Limit",	coastingFuelCutRpmLow, {coastingFuelCutEnabled == 1}
		field = "TPS Deactivation Threshold",			coastingFuelCutTps, {coastingFuelCutEnabled == 1}
		field = "CLT Activation Threshold",				coastingFuelCutClt, {coastingFuelCutEnabled == 1}
[Tools]
 ;addTool = toolName, PanelName
 addTool = veTableGenerator, "VE Table Generator", veTableTbl
 addTool = afrTableGenerator, "AFR Table Generator", afrTableTbl
 
