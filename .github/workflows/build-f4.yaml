name: Build F4 Debug

on: [push,pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        build-target: [default, mre-f4, mre-f7, prometheus]
        
        include:
          - build-target: default
            efi-cpu: ARCH_STM32F4
            efi-board: st_stm32f4
            
          - build-target: mre-f4
            efi-cpu: ARCH_STM32F4
            efi-board: microrusefi
            
          - build-target: mre-f7
            efi-cpu: ARCH_STM32F7
            efi-board: microrusefi
            
          - build-target: prometheus
            efi-cpu: ARCH_STM32F4
            efi-board: prometheus
          
    
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
        submodules: recursive
  
    - name: Download & Install GCC
      run: |
        wget 'https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2019q4/RC2.1/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2?revision=6e63531f-8cb1-40b9-bbfc-8a57cdfc01b4&la=en&hash=F761343D43A0587E8AC0925B723C04DBFB848339' -O compiler.tar.bz2
        tar -xvf compiler.tar.bz2
        echo "::add-path::`pwd`/gcc-arm-none-eabi-9-2019-q4-major/bin"
  
    - name: Test Compiler
      run: arm-none-eabi-gcc -v
  
    - name: Build Firmware
      working-directory: ./firmware/
      run: make -j4 PROJECT_BOARD=${{matrix.efi-board}} PROJECT_CPU=${{matrix.efi-cpu}}
      
    - name: Upload ELF
      uses: actions/upload-artifact@v1
      with:
        name: firmware
        path: ./firmware/build/rusefi.elf
